# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Florencia D'Andrea <lascientificasdedatos@gmail.com>, 2021
# Marilina Santero <marilinasantero@gmail.com>, 2021
# Reina Camacho Toro <rcamacho07@gmail.com>, 2021
# Fabricio Jiménez <fabricioajm@gmail.com>, 2021
# Alejandro © <acoca@turing.ac.uk>, 2021
# Camila Rangel Smith <camila.rangel.smith@gmail.com>, 2021
# 
msgid ""
msgstr ""
"Project-Id-Version: content\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2020-02-05 19:08:04+0000\n"
"PO-Revision-Date: 2020-04-07 14:20+0000\n"
"Last-Translator: Camila Rangel Smith <camila.rangel.smith@gmail.com>, 2021\n"
"Language-Team: Spanish (https://www.transifex.com/theturingway/teams/107194/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# header
#: testing/testing.md:1
msgid "# Testing"
msgstr "# Pruebas"

#: testing/testing.md:3
msgid "| Prerequisite | Importance |"
msgstr "| Prerrequisito | Importancia |"

#: testing/testing.md:4
msgid "| -------------|------------|"
msgstr "| -------------|------------|"

#: testing/testing.md:5
msgid ""
"| [Experience with the command "
"line](https://programminghistorian.org/en/lessons/intro-to-bash) | Necessary"
" |"
msgstr ""
"| [Experiencia con la línea de comandos] "
"(https://programminghistorian.org/en/lessons/intro-to-bash) | Necesario |"

# header
#: testing/testing.md:7
msgid "## Table of contents"
msgstr "## Tabla de contenidos"

# ordered list
#: testing/testing.md:9
msgid "1. [Summary](#Summary)"
msgstr "1. [Resumen] (#Summary)"

# ordered list
#: testing/testing.md:10
msgid ""
"2. [How this will help you/ why this is "
"useful](#How_this_will_help_you_why_this_is_useful)"
msgstr ""
"2. [Cómo te ayudará esto / por qué es "
"útil](#How_this_will_help_you_why_this_is_useful)"

#: testing/testing.md:11
msgid ""
"    1. [The advantages of testing for "
"research](#The_advantages_of_testing_for_research)"
msgstr ""
"1. [Las ventajas de realizar pruebas para la investigación] "
"(#The_advantages_of_testing_for_research)"

# ordered list
#: testing/testing.md:12
msgid ""
"3. [General guidance and good practice for "
"testing](#General_guidance_and_good_practice_for_testing)"
msgstr ""
"3. [Orientación general y buenas prácticas para las "
"pruebas](#General_guidance_and_good_practice_for_testing)"

#: testing/testing.md:13
msgid "    1. [Write tests. Any tests.](#Write_tests_any_tests)"
msgstr "1. [Escribir pruebas. Cualquier prueba.](#Write_tests_any_tests)"

#: testing/testing.md:14
msgid "    2. [Run the tests](#Run_the_tests)"
msgstr "2. [Ejecutar las pruebas](#Run_the_tests)"

#: testing/testing.md:15
msgid ""
"    3. [Consider how long it takes your tests to "
"run](#Consider_how_long_it_takes_your_tests_to_run)"
msgstr ""
"3. [Considera cuánto tardan sus pruebas en ejecutarse] "
"(#Consider_how_long_it_takes_your_tests_to_run)"

#: testing/testing.md:16
msgid ""
"    4. [Document the tests and how to run "
"them](#Document_the_tests_and_how_to_run_them)"
msgstr ""
"4. [Documenta las pruebas y cómo "
"ejecutarlas](#Document_the_tests_and_how_to_run_them)"

#: testing/testing.md:17
msgid "    5. [Test realistic cases](#Test_realistic_cases)"
msgstr "5. [Prueba casos realistas](#Test_realistic_cases)"

#: testing/testing.md:18
msgid "    6. [Use a testing framework](#Use_a_testing_framework)"
msgstr "6. [Utiliza un \"framework\" de prueba] (#Use_a_testing_framework)"

#: testing/testing.md:19
msgid ""
"    7. [Aim to have a good code coverage](#Aim_to_have_a_good_code_coverage)"
msgstr ""
"7. [Trata de tener una buena cobertura de "
"código](#Aim_to_have_a_good_code_coverage)"

#: testing/testing.md:20
msgid ""
"    8. [Use test doubles/mocking where "
"appropriate](#Use_test_doubles_stubs_mocking_where_appropriate)"
msgstr ""
" [Usar test dobles/objetos simulados (mocking) cuando sea "
"apropiado](#Usar_test_dobles_o_mocking_cuando_sea_apropiado)"

#: testing/testing.md:21
msgid "    9. [Testing stochastic code](#Testing_stochastic_code)"
msgstr "[Prueba de código estocástico] (#Prueba_código_estocástico)"

#: testing/testing.md:22
msgid "        1. [Use random number seeds](#Use_random_number_seeds)"
msgstr ""
"1. [Usar semillas de números aleatorios] (# Usar_ "
"semillas_de_números_aleatorios)"

#: testing/testing.md:23
msgid ""
"        2. [Measure the distribution of "
"results](#Measure_the_distribution_of_results)"
msgstr ""
"2. [Medir la distribución de resultados] (# "
"Medir_la_distribución_de_resultados)"

#: testing/testing.md:24
msgid ""
"    10. [Tests that are difficult to "
"quantify](#Tests_that_are_difficult_to_quantify)"
msgstr ""
"10. [Pruebas (tests) que son difíciles de cuantificar] (# "
"Pruebas_que_son_difíciles_de_cuantificar)"

#: testing/testing.md:25
msgid ""
"    11. [Testing if non-integer numbers are "
"equal](#Testing_if_non_integer_numbers_are_equal)"
msgstr ""
"11. [Probar que los números no enteros son iguales] (# "
"Probar_que_los_números_no_enteros_son_iguales)"

#: testing/testing.md:26
msgid ""
"        1. [When 0.1 + 0.2 does not equal "
"0.3](#When_point_1_plus_point_2_does_not_equal_point_3)"
msgstr ""
"1. [Cuando 0,1 + 0,2 no es igual a 0,3] "
"(#Cuando_punto_uno_más_punto_2_no_es_igual_a_punto_tres)"

#: testing/testing.md:27
msgid ""
"        2. [Equality in a floating point "
"world](#Equality_in_a_floating_point_world)"
msgstr ""
" 2. [Igualdad en un mundo de coma "
"flotante](#Equality_in_a_floating_point_world)"

# ordered list
#: testing/testing.md:28
msgid "4. [Types of tests](#Types_of_tests)"
msgstr "4. [Tipos de pruebas](#Tipos_de_pruebas)"

#: testing/testing.md:29
msgid "    1. [Level summary](#Level_summary)"
msgstr " 1. [Resumen de nivel](#Resumen_de_nivel)"

# ordered list
#: testing/testing.md:30
msgid "5. [Smoke testing](#Smoke_testing)"
msgstr "5. [Prueba de humo](#Prueba_de_humo)"

# ordered list
#: testing/testing.md:31
msgid "6. [Unit tests](#Unit_tests)"
msgstr "6. [Pruebas unitarias](#Pruebas_unitarias)"

#: testing/testing.md:32
msgid "    1. [Benefits of unit testing](#Benefits_of_unit_testing)"
msgstr ""
" 1. [Beneficios de las pruebas "
"unitarias](#Beneficios_de_las_pruebas_unitarias)"

#: testing/testing.md:33
msgid "    2. [Unit testing tips](#Unit_testing_tips)"
msgstr " 2. [Consejos para las pruebas unitarias](#Unit_testing_tips)"

# ordered list
#: testing/testing.md:34
msgid "7. [Integration testing](#Integration_testing)"
msgstr "7. [Pruebas de integración](#Pruebas_de_integración)"

#: testing/testing.md:35
msgid "    1. [Approaches](#Approaches)"
msgstr " 1. [Enfoques](#Enfoques)"

#: testing/testing.md:36
msgid "    2. [Integration testing tips](#Integration_testing_tips)"
msgstr ""
" 2. [Consejos para las pruebas de integración](#Integration_testing_tips)"

# ordered list
#: testing/testing.md:37
msgid "8. [System tests](#System_tests)"
msgstr "8. [Testeo de sistemas](#Testeo de sistemas)"

#: testing/testing.md:38
msgid "    1. [System testing tips](#System_testing_tips)"
msgstr " 1. [Consejos para las pruebas del sistema](#System_testing_tips)"

# ordered list
#: testing/testing.md:39
msgid "9. [Acceptance testing](#Acceptance_testing)"
msgstr "9. [Pruebas de aceptación](#Pruebas_de_aceptación)"

# ordered list
#: testing/testing.md:40
msgid "10. [Regression testing](#Regression_testing)"
msgstr "10. [Pruebas de regresión](#Pruebas_de_regresión)"

#: testing/testing.md:41
msgid "    1. [Limitations](#Limitations)"
msgstr "1. [Limitaciones](#Limitaciones)"

# ordered list
#: testing/testing.md:42
msgid "11. [Runtime testing](#Runtime_testing)"
msgstr "11. [Pruebas en tiempo de ejecución](#Pruebas en tiempo de ejecución)"

# ordered list
#: testing/testing.md:43
msgid "12. [Test driven development](#Test_driven_development)"
msgstr "12. [Desarrollo guiado por pruebas](#Desarrollo_guiado_por_pruebas)"

# ordered list
#: testing/testing.md:44
msgid "13. [Checklist](#Checklist)"
msgstr "13. [Checklist](#Checklist)"

#: testing/testing.md:45
msgid "    1. [Writing tests](#Writing_tests)"
msgstr "1. [Escribiendo tests](#Escribiendo_tests)"

#: testing/testing.md:46
msgid "    2. [Good practice checks](#Good_practice_checks)"
msgstr " 2. [Controles de buenas prácticas](#Control_de_buenas_prácticas)"

# ordered list
#: testing/testing.md:47
msgid "14. [What to learn next](#What_to_learn_next)"
msgstr "14. 14. [Qué aprender a continuación ](#Qué_aprender_a continuación)"

# ordered list
#: testing/testing.md:48
msgid "15. [Further reading](#Further_reading)"
msgstr "- [Lectura adicional](#Further_reading)"

# ordered list
#: testing/testing.md:49
msgid "16. [Definitions/glossary](#Definitions_glossary)"
msgstr "16. [Definiciones/glosario](#Definiciones_glosario)"

# ordered list
#: testing/testing.md:50
msgid "17. [Bibliography](#Bibliography)"
msgstr "17. [Bibliografía](#Bibliografía)"

#: testing/testing.md:52
msgid "<a name=\"Summary\"></a>"
msgstr "<a name=\"Summary\"></a>"

# header
#: testing/testing.md:53
msgid "## Summary"
msgstr "## Resumen"

#: testing/testing.md:55
msgid ""
"Researcher-written code now forms a part of a huge portion of research, and "
"if there are mistakes in the code the results may be partly or entirely "
"unreliable. Testing code thoroughly and frequently is vital to ensure "
"reliable, reproducible research. This chapter will cover general guidance "
"for writing tests, and describes a number of different kinds of testing, "
"their uses, and how to go about implementing them."
msgstr ""
"El código escrito por la persona que investiga forma parte ahora de una gran"
" parte de su actividad, y si hay errores en el código los resultados pueden "
"ser parcial o totalmente poco fiables. Probar el código a fondo y con "
"frecuencia es vital para garantizar una investigación fiable y reproducible."
" En este capítulo se ofrecen orientaciones generales para la realización de "
"pruebas y se describen distintos tipos de pruebas, sus usos y cómo llevarlas"
" a cabo."

#: testing/testing.md:57
msgid "<a name=\"How_this_will_help_you_why_this_is_useful\"></a>"
msgstr "<a name=\"How_this_will_help_you_why_this_is_useful\"></a>"

# header
#: testing/testing.md:58
msgid "## How this will help you/ why this is useful"
msgstr "## Cómo te ayudará esto/ por qué esto es útil"

#: testing/testing.md:60
msgid "Here's a couple of examples of why should write tests:"
msgstr "Aquí un par de ejemplos sobre por qué deberías escribir pruebas:"

#: testing/testing.md:62
msgid "![testing_motivation_1](../figures/testing_motivation_1.png)"
msgstr "![testing_motivation_1](../figures/testing_motivation_1.png)"

#: testing/testing.md:64
msgid "![testing_motivation_2](../figures/testing_motivation_2.png)"
msgstr "![testing_motivation_2](../figures/testing_motivation_2.png)"

#: testing/testing.md:66
msgid ""
"It is very, very easy to make mistakes when coding. A single misplaced "
"character can cause a program's output to be entirely wrong. One of the "
"examples above was caused by a plus sign which should have been a minus. "
"Another was caused by one piece of code working in meters while a piece of "
"code written by another researcher worked in feet. *Everyone* makes "
"mistakes, and in research the results can be catastrophic. Careers can be "
"damaged/ended, vast sums of research funds can be wasted, and valuable time "
"may be lost to exploring incorrect avenues. This is why tests are vital."
msgstr ""
"Es muy, muy fácil cometer errores al escribir código. Un solo caracter mal "
"colocado puede hacer que el resultado de un programa sea totalmente erróneo."
" Uno de los ejemplos anteriores fue causado por un signo más que debería "
"haber sido un menos. Otro fue causado porque una parte del código funcionaba"
" en metros mientras que otra, escrita por otra persona, funcionaba en pies. "
"*Todo el mundo* comete errores y en la investigación los resultados pueden "
"ser catastróficos. Las carreras profesionales pueden verse perjudicadas o "
"acabadas, se pueden desperdiciar grandes sumas de fondos de investigación y "
"se puede perder un tiempo valioso por explorar vías incorrectas. Por eso las"
" pruebas son vitales."

#: testing/testing.md:68
msgid ""
"Even if problems in a program are caught before research is published it can"
" be difficult to figure out what results are contaminated and must be re-"
"done. This represents a huge loss of time and effort. Catching these "
"problems as early as possible minimises the amount of work it takes to fix "
"them, and for most researchers time is by far their most scarce resource. "
"You should not skip writing tests because you are short on time, you should "
"write tests *because* you are short on time. Researchers cannot afford to "
"have months or years of work go down the drain, and they can't afford to "
"repeatedly manually check every little detail of a program that might be "
"hundreds or hundreds of thousands of lines long. Writing tests to do it for "
"you is the time-saving option, and it's the safe option."
msgstr ""
"Incluso si se detectan los problemas de un programa antes de que se publique"
" la investigación, puede ser difícil averiguar qué resultados están "
"contaminados y deben volver a hacerse. Esto supone una enorme pérdida de "
"tiempo y esfuerzo. Detectar estos problemas lo antes posible minimiza la "
"cantidad de trabajo que se necesita para solucionarlos, y para la mayoría de"
" los investigadores el tiempo es, con mucho, su recurso más escaso. No hay "
"que dejar de escribir pruebas porque se tenga poco tiempo, hay que escribir "
"pruebas *porque* se tiene poco tiempo. Los investigadores no pueden "
"permitirse que meses o años de trabajo se vayan por el desagüe, y no pueden "
"permitirse comprobar manualmente y de forma repetida cada pequeño detalle de"
" un programa que puede tener cientos o cientos de miles de líneas. Escribir "
"pruebas que lo hagan por ti es la opción que ahorra tiempo, y es la opción "
"segura."

#: testing/testing.md:70
msgid ""
"As researchers write code they generally do some tests as they go along, "
"often by adding in print statements and checking the output. However, these "
"tests are often thrown away as soon as they pass and are no longer present "
"to check what they were intended to check. It is comparatively very little "
"work to place these tests in functions and keep them so they can be run at "
"any time in the future. The additional labour is minimal, the time saved and"
" safeguards provided are invaluable. Further, by formalising the testing "
"process into a suite of tests that can be run independently and "
"automatically, you provide a much greater degree of confidence that the "
"software behaves correctly and increase the likelihood that defects will be "
"found."
msgstr ""
"Cuando las personas investigadoras escriben código, suelen hacer algunas "
"pruebas sobre la marcha, a menudo añadiendo sentencias print y comprobando "
"la salida. Sin embargo, estas pruebas suelen descartarse en cuanto se "
"superan y ya no están presentes para comprobar lo que se pretendía "
"comprobar. Es comparativamente muy poco trabajo colocar estas pruebas en "
"funciones y guardarlas para que puedan ser ejecutadas en cualquier momento "
"en el futuro. El trabajo adicional es mínimo, el tiempo que se ahorra y las "
"garantías que se ofrecen son inestimables. Además, al formalizar el proceso "
"de pruebas en un conjunto de pruebas que pueden ejecutarse de forma "
"independiente y automática, se proporciona un grado mucho mayor de confianza"
" en que el software se comporta correctamente y se incrementa la "
"probabilidad de encontrar defectos."

#: testing/testing.md:72
msgid ""
"Testing also affords researchers much more peace of mind when working "
"on/improving a project. After changing their code a researcher will want to "
"check that their changes or fixes have not broken anything. Providing "
"researchers with a fail-fast environment allows the rapid identification of "
"failures introduced by changes to the code. The alternative, of the "
"researcher writing and running whatever small tests they have time for is "
"far inferior to a good testing suite which can thoroughly check the code."
msgstr ""
"Las pruebas también ofrecen a los investigadores mucha más tranquilidad a la"
" hora de trabajar o mejorar un proyecto. Después de cambiar su código, se "
"querrá comprobar que sus cambios o correcciones no han roto nada. "
"Proporcionar a los investigadores un entorno a prueba de fallos permite "
"identificar rápidamente los fallos introducidos por los cambios en el "
"código. La alternativa de que el investigador escriba y ejecute cualquier "
"pequeña prueba para la que tenga tiempo es muy inferior a un buen conjunto "
"de pruebas que pueda comprobar a fondo el código."

#: testing/testing.md:74
msgid ""
"Another benefit of writing tests is that it typically forces a researcher to"
" write cleaner, more modular code as such code is far easier to write tests "
"for, leading to an improvement in code quality. Good quality code is far "
"easier (and altogether more pleasant) to work with than tangled rat's nests "
"of code I'm sure we've all come across (and, let's be honest, written). This"
" point is expanded upon in the section on [unit tests](#Unit_tests)."
msgstr ""
"Otro beneficio de escribir pruebas es que normalmente obliga a quien "
"investiga a escribir un código más limpio y modular, ya que para dicho "
"código es mucho más fácil escribir pruebas, lo que conduce a una mejora en "
"la calidad del código. El código de buena calidad es mucho más fácil (y más "
"agradable) de trabajar que los nidos de ratas enmarañados con los que seguro"
" que todos nos hemos encontrado (y, seamos sinceros, escrito). Este punto se"
" amplía en la sección sobre [pruebas unitarias](#Unit_tests)."

#: testing/testing.md:76
msgid "<a name=\"The_advantages_of_testing_for_research\"></a>"
msgstr "<a name=\"The_advantages_of_testing_for_research\"></a>"

# header
#: testing/testing.md:77
msgid "### The advantages of testing for research"
msgstr "### Las ventajas de testear en investigación"

#: testing/testing.md:79
msgid ""
"As well as advantaging individual researchers testing also benefits research"
" as a whole. It makes research more reproducible by answering the question "
"\"how do we even know this code works\". If tests are never saved, just done"
" and deleted the proof cannot be reproduced easily."
msgstr ""
"Además de favorecer a los investigadores individuales, las pruebas también "
"benefician a la investigación en su conjunto. Hace que la investigación sea "
"más reproducible al responder a la pregunta «¿cómo sabemos que este código "
"funciona?». Si las pruebas nunca se guardan, simplemente se hacen y se "
"borran, la prueba no puede reproducirse fácilmente."

#: testing/testing.md:81
msgid ""
"Testing also helps prevent valuable grant money being spent on projects that"
" may be partly or wholly flawed due to mistakes in the code. Worse if "
"mistakes are not at found and the work is published any subsequent work that"
" builds upon the project will be similarly flawed."
msgstr ""
"Las pruebas también ayudan a evitar que se gaste un valioso dinero de "
"subvenciones en proyectos que pueden ser parcial o totalmente defectuosos "
"debido a errores en el código. Y lo que es peor, si no se detectan los "
"errores y se publica el trabajo, cualquier trabajo posterior que se base en "
"el proyecto tendrá los mismos defectos."

#: testing/testing.md:83
msgid ""
"Perhaps the cleanest expression of why testing is important for research as "
"a whole can be found in the [Software Sustainability "
"Institute](https://www.software.ac.uk/) slogan: better software better "
"research."
msgstr ""
"Tal vez la expresión más clara de por qué las pruebas son importantes para "
"la investigación en su conjunto se encuentre en el eslogan del [Instituto de"
" Sostenibilidad del Software](https://www.software.ac.uk/) eslogan: «mejor "
"software, mejor investigación»."

#: testing/testing.md:85
msgid "<a name=\"General_guidance_and_good_practice_for_testing\"></a>"
msgstr "<a name=\"General_guidance_and_good_practice_for_testing\"></a>"

# header
#: testing/testing.md:86
msgid "## General guidance and good practice for testing"
msgstr "## Orientación general y buenas prácticas para el testeo"

#: testing/testing.md:88
msgid ""
"There are a number of [different kinds](#Types_of_tests) of testing which "
"each have best practice specific to them. Nevertheless there is some general"
" guidance that applies to all of them, which will be outlined here."
msgstr ""
"Existen varios [tipos](#Types_of_tests) de pruebas, cada uno de los cuales "
"cuenta con prácticas recomendadas específicas. No obstante, existen algunas "
"orientaciones generales que se aplican a todas ellas y que se describen a "
"continuación."

#: testing/testing.md:90
msgid "<a name=\"Write_tests_any_tests\"></a>"
msgstr "<a name=\"Write_tests_any_tests\"></a>"

# header
#: testing/testing.md:91
msgid "### Write tests. Any tests."
msgstr "### Escribir test. Cualquier test."

#: testing/testing.md:93
msgid ""
"Starting the process of writing tests can be overwhelming, especially if you"
" have a large code base. Further to that, as mentioned, there are many kinds"
" of tests, and implementing all of them can seem like an impossible mountain"
" to climb. That is why the single most important piece of guidance in this "
"chapter is as follows: **write some tests**. Testing one tiny thing in a "
"code that's thousands of lines long is infinitely better than testing no "
"things in a code that's thousands of lines long. You may not be able to do "
"everything, but doing *something* is valuable."
msgstr ""
"Comenzar el proceso de escribir pruebas puede ser abrumador, especialmente "
"si tienes una gran cantidad de código. Además, como se ha mencionado, hay "
"muchos tipos de pruebas, y la implementación de todas ellas puede parecer "
"una montaña imposible de escalar. Por eso, el consejo más importante de este"
" capítulo es el siguiente: **escribir algunas pruebas**. Probar una pequeña "
"cosa en un código de miles de líneas es infinitamente mejor que no probar "
"nada en un código de miles de líneas. Puede que no seas capaz de hacerlo "
"todo, pero hacer *algo* es valioso."

#: testing/testing.md:95
msgid ""
"Do not be discouraged. Make improvements where you can, and do your best to "
"include tests with new code you write even if it's not feasible to write "
"tests for all the code that's already written."
msgstr ""
"No te desanimes. Realice mejoras donde pueda y haga todo lo posible para "
"incluir test en el nuevo código que escriba, incluso si no es factible "
"escribir pruebas para todo el código que ya está escrito."

#: testing/testing.md:97
msgid "<a name=\"Run_the_tests\"></a>"
msgstr "<a name=\"Run_the_tests\"></a>"

# header
#: testing/testing.md:98
msgid "### Run the tests"
msgstr "### Ejecuta los tests"

#: testing/testing.md:100
msgid ""
"The second most important piece of advice in this chapter: run the tests. "
"Having a beautiful, perfect test suite is no use if you rarely run it. "
"Leaving long gaps between test runs makes it more difficult to track down "
"what has gone wrong when a test fails because a great deal in the code will "
"have changed. Also if it's been weeks or months since tests have been run "
"and they fail it is difficult or impossible to know what work/results that "
"have been done in the intervening time are still valid, and which have to be"
" thrown away as they could have been impacted by the bug."
msgstr ""
"El segundo consejo más importante de este capítulo: ejecuta las pruebas. "
"Tener un hermoso y perfecto conjunto de pruebas no sirve de nada si rara vez"
" lo ejecutas. Dejar largos períodos entre las ejecuciones de las pruebas "
"hace que sea más difícil averiguar qué es lo que ha fallado cuando una "
"prueba falla, porque habrá cambiado mucho el código. Además, si han pasado "
"semanas o meses desde que se ejecutan las pruebas y éstas fallan, es difícil"
" o imposible saber qué trabajo o resultados que se han producido en ese "
"tiempo siguen siendo válidos, y cuáles hay que desechar porque podrían haber"
" sido afectados por el fallo."

#: testing/testing.md:102
msgid ""
"As such it is best to automate your testing as far as possible. If each test"
" needs to be run individually then that boring painstaking process is likely"
" to get neglected. This can be done by making use of a testing framework "
"([discussed later](#Use_a_testing_framework)). [Jenkins](https://jenkins.io)"
" is another good tool for this. Ideally set your tests up to run at regular "
"intervals, possibly each night."
msgstr ""
"Por ello, lo mejor es automatizar las pruebas en la medida de lo posible. Si"
" cada prueba tiene que ser ejecutada individualmente, es probable que ese "
"aburrido y minucioso proceso se descuide. Esto se puede hacer mediante el "
"uso de un marco de pruebas ([discutido más "
"adelante](#Use_a_testing_framework)). [Jenkins](https://jenkins.io) es otra "
"buena herramienta para esto. Lo ideal es configurar las pruebas para que se "
"ejecuten a intervalos regulares, posiblemente cada noche."

#: testing/testing.md:104
msgid ""
"Consider setting up continuous integration (discussed in the continuous "
"integration chapter) on your project. This will automatically run your tests"
" each time you make a change to your code and, depending on the continuous "
"integration software you use, will notify you if any of the tests fail."
msgstr ""
"Considera la posibilidad de configurar la integración continua (de la que "
"hablamos en el capítulo de integración continua) en tu proyecto. Esto "
"ejecutará automáticamente tus pruebas cada vez que hagas un cambio en tu "
"código y, dependiendo del software de integración continua que utilices, te "
"notificará si alguna de las pruebas falla."

#: testing/testing.md:106
msgid "<a name=\"Consider_how_long_it_takes_your_tests_to_run\"></a>"
msgstr "<a name=\"Consider_how_long_it_takes_your_tests_to_run\"></a>"

# header
#: testing/testing.md:107
msgid "### Consider how long it takes your tests to run"
msgstr "### Considera cuánto tardan en ejecutarse tus tests"

#: testing/testing.md:109
msgid ""
"Some tests, like [unit tests](#Unit_tests) only test a small piece of code "
"and so typically are very fast. However other kinds of tests, such as "
"[system tests](#System_tests) which test the entire code from end to end, "
"may take a long time to run depending on the code. As such it can be "
"obstructive to run the entire test suite after each little bit of work. In "
"that case it is better to run lighter weight tests such as unit tests "
"frequently, and longer tests only once per day overnight. It is also good to"
" scale the number of each kind of tests you have in relation to how long "
"they take to run. You should have a lot of unit tests (or other types of "
"tests that are fast) but much fewer tests which take a long time to run."
msgstr ""
"Algunas pruebas, como las [pruebas unitarias](#Unit_tests) sólo prueban una "
"pequeña parte del código y por eso suelen ser muy rápidas. Sin embargo, "
"otros tipos de pruebas, como las [pruebas del sistema](#System_tests) que "
"prueban todo el código de punta a punta, pueden tardar mucho tiempo en "
"ejecutarse dependiendo del código. Por lo tanto, puede resultar molesto "
"ejecutar todo el conjunto de pruebas después de cada pequeño trabajo. En ese"
" caso, es mejor ejecutar con frecuencia las pruebas más ligeras, como las "
"pruebas unitarias, y las pruebas más largas sólo una vez al día durante la "
"noche. También es bueno escalar el número de cada tipo de pruebas que tienes"
" en relación con el tiempo que tardan en ejecutarse. Deberías tener muchas "
"pruebas unitarias (u otros tipos de pruebas que sean rápidas) pero muchas "
"menos pruebas que tarden mucho en ejecutarse."

#: testing/testing.md:111
msgid "<a name=\"Document_the_tests_and_how_to_run_them\"></a>"
msgstr "<a name=\"Document_the_tests_and_how_to_run_them\"></a>"

# header
#: testing/testing.md:112
msgid "### Document the tests and how to run them"
msgstr "### Documente las pruebas y cómo ejecutarlas"

#: testing/testing.md:114
msgid ""
"It is important to provide documentation that describes how to run the "
"tests, both for yourself in case you come back to a project in the future, "
"and for anyone else that may wish to build upon or reproduce your work. This"
" documentation should also cover subjects such as"
msgstr ""
"Otro beneficio de escribir pruebas es que normalmente obliga a un "
"investigador a escribir un código más limpio y modular, ya que para dicho "
"código es mucho más fácil escribir pruebas, lo que conduce a una mejora en "
"la calidad del código. Esta documentación también debe abarcar temas como"

# unordered list
#: testing/testing.md:116
msgid "- Any resources, such as test dataset files that are required"
msgstr ""
"- Cualquier recurso, como los archivos de conjuntos de datos de prueba que "
"se requieran"

# unordered list
#: testing/testing.md:117
msgid "- Any configuration/settings adjustments needed to run the tests"
msgstr ""
"- Cualquier ajuste de configuración necesaria para realizar las pruebas"

# unordered list
#: testing/testing.md:118
msgid ""
"- What software (such as [testing frameworks](#Use_a_testing_framework)) "
"need to be installed"
msgstr ""
"- Qué software (como [frameworks de pruebas](#Use_a_testing_framework)) debe"
" instalarse"

#: testing/testing.md:120
msgid ""
"Ideally, you would provide scripts to set up and configure any resources "
"that are needed."
msgstr ""
"Lo ideal sería proporcionar scripts para instalar y configurar los recursos "
"necesarios."

#: testing/testing.md:122
msgid "<a name=\"Test_realistic_cases\"></a>"
msgstr "<a name=\"Test_realistic_cases\"></a>"

# header
#: testing/testing.md:123
msgid "### Test realistic cases"
msgstr "### Probar casos realistas"

#: testing/testing.md:125
msgid ""
"Make the cases you test as realistic as possible. If for example, you have "
"dummy data to run tests on you should make sure that data is as similar as "
"possible to the actual data. If your actual data is messy with a lot of null"
" values, so should your test dataset be."
msgstr ""
"Haz que los casos que pruebes sean lo más realistas posible. Si, por "
"ejemplo, tienes datos ficticios para realizar las pruebas, debes asegurarte "
"de que los datos sean lo más parecidos posible a los reales. Si los datos "
"reales están desordenados con muchos valores nulos, también debería serlo el"
" conjunto de datos de prueba."

#: testing/testing.md:127
msgid "<a name=\"Use_a_testing_framework\"></a>"
msgstr "<a name=\"Use_a_testing_framework\"></a>"

# header
#: testing/testing.md:128
msgid "### Use a testing framework"
msgstr "### Usa un framework de pruebas"

#: testing/testing.md:130
msgid ""
"There are tools available to make writing and running tests easier, these "
"are known as testing frameworks. Find one you like, learn about the features"
" it offers, and make use of them. Common testing frameworks (and the "
"languages they apply to) include:"
msgstr ""
"Hay herramientas disponibles para facilitar la escritura y ejecución de "
"pruebas, conocidas como marcos de texting (frameworks). Encuentre uno que le"
" guste, conozca las funciones que ofrece y úselas. Los marcos de testing "
"comunes (y los lenguajes a los que se aplican) incluyen:"

# unordered list
#: testing/testing.md:132
msgid "- Language agnostic"
msgstr "- Agnóstico de lenguaje"

# unordered list
#: testing/testing.md:133
msgid ""
"  - CTest, test runner for executables, bash scripts, and more. Great for "
"legacy code hardening"
msgstr ""
" - CTest, programa de pruebas para ejecutables, scripts bash y más. Ideal "
"para el endurecimiento del código heredado"

# unordered list
#: testing/testing.md:134
msgid "- C++"
msgstr "- C++"

# unordered list
#: testing/testing.md:135
msgid "  - Catch"
msgstr "  - Catch"

# unordered list
#: testing/testing.md:136
msgid "  - CppTest"
msgstr "  - CppTest"

# unordered list
#: testing/testing.md:137
msgid "  - Boost::Test"
msgstr "  - Boost::Test"

# unordered list
#: testing/testing.md:138
msgid "  - google-test      "
msgstr "  - google-test      "

# unordered list
#: testing/testing.md:139 testing/testing.md:500
msgid "- C"
msgstr "- C"

# unordered list
#: testing/testing.md:140
msgid "  - all C++ frameworks"
msgstr "  - all C++ frameworks"

# unordered list
#: testing/testing.md:141
msgid "  - Check"
msgstr "  - Check"

# unordered list
#: testing/testing.md:142
msgid "  - CUnit"
msgstr "  - CUnit"

# unordered list
#: testing/testing.md:143
msgid "- Python"
msgstr "- Python"

# unordered list
#: testing/testing.md:144
msgid "  - pytest (recommended)"
msgstr "  - pytest (recomendado)"

# unordered list
#: testing/testing.md:145
msgid "  - unittest comes with standard Python library"
msgstr " - unittest viene con la biblioteca estándar de Python"

# unordered list
#: testing/testing.md:146
msgid "- R unit-tests"
msgstr "- R unit-tests"

# unordered list
#: testing/testing.md:147
msgid "  - testthat"
msgstr "- testthat"

# unordered list
#: testing/testing.md:148
msgid "  - tinytest"
msgstr "  - tinytest"

# unordered list
#: testing/testing.md:149
msgid "  - svUnit (works with SciViews GUI)"
msgstr " - svUnit (funciona con la interfaz gráfica de SciViews)"

# unordered list
#: testing/testing.md:150
msgid "- Fortran unit-tests:"
msgstr "- Fortran unit-tests:"

# unordered list
#: testing/testing.md:151
msgid "  - funit"
msgstr "  - funit"

# unordered list
#: testing/testing.md:152
msgid "  - pfunit (works with MPI)"
msgstr "  - pfunit (funciona con MPI)"

#: testing/testing.md:154
msgid "<a name=\"Aim_to_have_a_good_code_coverage\"></a>"
msgstr "<a name=\"Aim_to_have_a_good_code_coverage\"></a>"

# header
#: testing/testing.md:155
msgid "### Aim to have a good code coverage"
msgstr "### Apunta a tener una buena cobertura del código"

#: testing/testing.md:157
msgid ""
"Code coverage is a measure of how much of your code is \"covered\" by tests."
" More precisely it a measure of how much of your code is run when tests are "
"conducted. So for example, if you have a `if` statement but only test things"
" where that if statement evaluates to \"True\" then none of the code that "
"comes under \"False\" will be run. As a result your code coverage would be <"
" 100% (the exact number would depend on how much code comes under the True "
"and False cases). Code coverage doesn't include documentation like comments,"
" so adding more documentation doesn't affect your percentages."
msgstr ""
"La cobertura del código es una medida de la cantidad de código que está "
"\"cubierto\" por las pruebas. Más concretamente, es una medida de la "
"cantidad de código que se ejecuta cuando se realizan las pruebas. Así, por "
"ejemplo, si tienes una sentencia `if` pero sólo pruebas las cosas en las que"
" esa sentencia `if` se evalúa como `Verdadero`, entonces no se ejecutará "
"nada del código que esté bajo `Falso`. Como resultado, su cobertura de "
"código sería <100% (el número exacto dependería de la cantidad de código que"
" se encuentre en los casos \"True\" y \"False\"). La cobertura del código no"
" incluye la documentación como los comentarios, por lo que añadir más "
"documentación no afecta a sus porcentajes."

#: testing/testing.md:159
msgid ""
"As [mentioned](#Write_tests_any_tests) any tests are an improvement over no "
"tests. Nevertheless it is good to at least aspire to having your code "
"coverage as high as feasible."
msgstr ""
"Como se ha mencionado]( #Write_tests_any_tests) cualquier prueba es una "
"mejora sobre la ausencia de pruebas. Sin embargo, es bueno al menos aspirar "
"a tener una cobertura de código tan alta como sea posible."

#: testing/testing.md:161
msgid ""
"Most programming languages have tools either built into them, or that can be"
" imported, or as part of testing frameworks, which automatically measure "
"code coverage. There's also a nice little [bot](https://codecov.io/) for "
"measuring code coverage available too."
msgstr ""
"La mayoría de los lenguajes de programación tienen herramientas "
"incorporadas, o que se pueden importar, o como parte de los entornos de "
"prueba, que miden automáticamente la cobertura del código. También existe un"
" pequeño [bot](https://codecov.io/) para medir la cobertura del código."

#: testing/testing.md:163
msgid ""
"**Pitfall: The illusion of good coverage.** In some instances, the same code"
" can and probably should be tested in multiple ways. For example, coverage "
"can quickly increase on code that applies \"sanity check\" tests to its "
"output ([see below](#tests-that-are-difficult-to-quantify)), but this "
"doesn't preclude the risk that the code is producing the broadly right "
"answer for the wrong reasons. In general, the best tests are those that "
"isolate the smaller rather than larger chunks of coherent code, and so pick "
"out individual steps of logic. Try to be guided by thinking about the "
"possible things that might happen to a particular chunk of code in the "
"execution of the whole, and test these individual cases. Often, this will "
"result in the same code being tested multiple times - this is a good thing!"
msgstr ""
"**La ilusión de una buena cobertura: La ilusión de una buena cobertura.** En"
" algunos casos, el mismo código puede y probablemente debe ser probado de "
"múltiples maneras. Por ejemplo, la cobertura puede aumentar rápidamente en "
"el código que aplica pruebas de \"comprobación de sanidad\" a su salida "
"([ver más abajo](#pruebas-que-son-difíciles-de-cuantificar)), pero esto no "
"excluye el riesgo de que el código esté produciendo la respuesta ampliamente"
" correcta por las razones equivocadas. En general, las mejores pruebas son "
"las que aíslan los trozos más pequeños y no los más grandes de un código "
"coherente, y por lo tanto seleccionan los pasos individuales de la lógica. "
"Intenta guiarte pensando en las posibles cosas que pueden ocurrir a un trozo"
" de código concreto en la ejecución del conjunto, y prueba estos casos "
"individuales. A menudo, esto hará que el mismo código se pruebe varias "
"veces, lo cual es bueno."

#: testing/testing.md:165
msgid "<a name=\"Use_test_doubles_stubs_mocking_where_appropriate\"></a>"
msgstr "<a name=\"Use_test_doubles_stubs_mocking_where_appropriate\"></a>"

# header
#: testing/testing.md:166
msgid "### Use test doubles/stubs/mocking where appropriate"
msgstr "**### Utilizar \"doubles/stubs/mockings\" de pruebas cuando sea apropiado"

#: testing/testing.md:168
msgid ""
"If a test fails it should be constructed such that is as easy to trace the "
"source of the failure as possible. This becomes problematic if a piece of "
"code you want to test unavoidably depends on other things. For example if a "
"test for a piece of code that interacts with the web fails that could be "
"because the code has a bug *or* there is a problem with the internet "
"connection. Similarly if a test for a piece of code that uses an object "
"fails it could be because there is a bug in the code being tested, or a "
"problem with the object (which should be tested by its own, separate tests)."
" These dependencies should be eliminated from tests, if possible. This can "
"be done via using test replacements (test doubles) in the place of the real "
"dependencies. Test doubles can be classified as follows:"
msgstr ""
"Si una prueba falla, debe construirse de forma que sea tan fácil rastrear el"
" origen del fallo como sea posible. Esto se convierte en un problema si una "
"pieza de código que quieres probar depende inevitablemente de otras cosas. "
"Por ejemplo, si una prueba para una pieza de código que interactúa con la "
"web falla, podría ser porque el código tiene un error *o* hay un problema "
"con la conexión a Internet. Del mismo modo, si una prueba de un fragmento de"
" código que utiliza un objeto falla, podría ser porque hay un error en el "
"código que se está probando, o un problema con el objeto (que debería ser "
"probado por sus propias pruebas, por separado). Estas dependencias deben "
"eliminarse de las pruebas, si es posible. Esto puede hacerse mediante el uso"
" de sustitutos de pruebas (dobles de pruebas) en lugar de las dependencias "
"reales. Los dobles de prueba pueden clasificarse como sigue:"

# unordered list
#: testing/testing.md:170
msgid ""
"- A dummy object is passed around but never used, meaning its methods are "
"never called. Such an object can for example be used to fill the parameter "
"list of a method."
msgstr ""
"- Un objeto ficticio se pasa pero nunca se utiliza, lo que significa que sus"
" métodos nunca se llaman. Este objeto puede utilizarse, por ejemplo, para "
"rellenar la lista de parámetros de un método."

# unordered list
#: testing/testing.md:171
msgid ""
"- Fake objects have working implementations, but are usually simplified. For"
" example, they use an in memory database and not a real database."
msgstr ""
"- Los objetos falsos tienen implementaciones que funcionan, pero suelen "
"estar simplificadas. Por ejemplo, utilizan una base de datos en memoria y no"
" una base de datos real."

# unordered list
#: testing/testing.md:172
msgid ""
"- A stub is an partial implementation for an interface or class with the "
"purpose of using an instance of this stub during testing. Stubs usually "
"don’t respond to anything outside what’s programmed in for the test. Stubs "
"may also record information about calls."
msgstr ""
"- Un stub es una implementación parcial de una interfaz o clase con el "
"propósito de utilizar una instancia de este stub durante las pruebas. Los "
"stubs normalmente no responden a nada fuera de lo programado para la prueba."
" Los stubs también pueden registrar información sobre las llamadas."

# unordered list
#: testing/testing.md:173
msgid ""
"- A mock object is a dummy implementation for an interface or a class in "
"which you define the output of certain method calls. Mock objects are "
"configured to perform a certain behaviour during a test. They typically "
"record the interaction with the system and tests can validate that."
msgstr ""
"- Un objeto simulado es una implementación ficticia de una interfaz o una "
"clase en la que se define la salida de ciertas llamadas a métodos. Los "
"objetos simulados se configuran para realizar un determinado comportamiento "
"durante una prueba. Suelen registrar la interacción con el sistema y las "
"pruebas pueden validarlo."

#: testing/testing.md:175
msgid "Test doubles can be passed to other objects which are tested."
msgstr ""
"Los sustitutos de prueba se pueden pasar a otros objetos que se prueban."

#: testing/testing.md:177
msgid ""
"You can create mock objects manually (via code) or use a mock framework to "
"simulate these classes. Mock frameworks allow you to create mock objects at "
"runtime and define their behaviour. The classical example for a mock object "
"is a data provider. In production an implementation to connect to the real "
"data source is used. But for testing a mock object simulates the data source"
" and ensures that the test conditions are always the same."
msgstr ""
"Puedes crear objetos simulados manualmente (mediante código) o utilizar un "
"marco de trabajo simulado para simular estas clases. Los frameworks "
"simulados permiten crear objetos simulados en tiempo de ejecución y definir "
"su comportamiento. El ejemplo clásico de un objeto simulado es un proveedor "
"de datos. En producción se utiliza una implementación para conectarse a la "
"fuente de datos real. Pero para las pruebas, un objeto simulado simula la "
"fuente de datos y asegura que las condiciones de prueba sean siempre las "
"mismas."

#: testing/testing.md:179
msgid "<a name=\"Testing_stochastic_code\"></a>"
msgstr "<a name=\"Testing_stochastic_code\"></a>"

# header
#: testing/testing.md:180
msgid "### Testing stochastic code"
msgstr "### Prueba del código estocástico"

#: testing/testing.md:182
msgid ""
"Sometimes code contains an element of randomness, a common example being "
"code that makes use of [Monte Carlo "
"methods](https://en.wikipedia.org/wiki/Monte_Carlo_method). Testing this "
"kind of code can be very difficult because if it is run multiple times it "
"will generate different answers, all of which may be \"right\", even is it "
"contains no bugs. There are two main ways to tackle testing stochastic code:"
msgstr ""
"A veces el código contiene un elemento de aleatoriedad, un ejemplo común es "
"el código que hace uso de [métodos de Monte "
"Carlo](https://en.wikipedia.org/wiki/Monte_Carlo_method). Probar este tipo "
"de código puede ser muy difícil porque si se ejecuta varias veces generará "
"diferentes respuestas, todas las cuales pueden ser \"correctas\", incluso si"
" no contiene errores. Hay dos formas principales de abordar la comprobación "
"del código estocástico:"

#: testing/testing.md:184
msgid "<a name=\"Use_random_number_seeds\"></a>"
msgstr "<a name=\"Use_random_number_seeds\"></a>"

# header
#: testing/testing.md:185
msgid "#### Use random number seeds"
msgstr "#### Utilizar semillas de números aleatorios"

#: testing/testing.md:187
msgid ""
"Random number seeds are a little difficult to explain so here's an example. "
"Here's a little Python script that prints three random numbers."
msgstr ""
"Las semillas de números aleatorios son un poco difíciles de explicar, así "
"que aquí hay un ejemplo. Miremos a continuación un pequeño script en Python "
"que imprime tres números aleatorios."

# code block
#: testing/testing.md:188
msgid ""
"```\n"
"import random\n"
"\n"
"# Print three random numbers\n"
"print(random.random())\n"
"print(random.random())\n"
"print(random.random())\n"
"```"
msgstr ""
"```\n"
"import random\n"
"\n"
"# Print three random numbers\n"
"print(random.random())\n"
"print(random.random())\n"
"print(random.random())\n"
"```"

#: testing/testing.md:197
msgid ""
"This script has no bugs but if you run it repeatedly you will get different "
"answers each time. Now let's set a random number seed."
msgstr ""
"Este script no tiene errores pero si lo ejecutas repetidamente obtendrás "
"respuestas diferentes cada vez. Ahora vamos a establecer una semilla de "
"números aleatorios."

# code block
#: testing/testing.md:198
msgid ""
"```\n"
"import random\n"
"\n"
"# Set a random number seed\n"
"random.seed(1)\n"
"\n"
"# Print three random numbers\n"
"print(random.random())\n"
"print(random.random())\n"
"print(random.random())\n"
"```"
msgstr ""
"```\n"
"import random\n"
"\n"
"# Set a random number seed\n"
"random.seed(1)\n"
"\n"
"# Print three random numbers\n"
"print(random.random())\n"
"print(random.random())\n"
"print(random.random())\n"
"```"

#: testing/testing.md:210
msgid "Now if you run this script it outputs"
msgstr "Ahora bien, si se ejecuta este script se obtiene"

# code block
#: testing/testing.md:211
msgid ""
"```\n"
"0.134364244112\n"
"0.847433736937\n"
"0.763774618977\n"
"```"
msgstr ""
"```\n"
"0.134364244112\n"
"0.847433736937\n"
"0.763774618977\n"
"```"

#: testing/testing.md:217
msgid ""
"and every time you run this script you will get the *same* output, it will "
"print the *same* three random numbers. If the random number seed is changed "
"you will get a different three random numbers:"
msgstr ""
"y cada vez que ejecute este script obtendrá la *misma* salida, imprimirá los"
" *mismos* tres números aleatorios. Si se cambia la semilla de números "
"aleatorios se obtendrán tres números aleatorios diferentes:"

# code block
#: testing/testing.md:219
msgid ""
"```\n"
"0.956034271889\n"
"0.947827487059\n"
"0.0565513677268\n"
"```"
msgstr ""
"```\n"
"0.956034271889\n"
"0.947827487059\n"
"0.0565513677268\n"
"```"

#: testing/testing.md:224
msgid ""
"but again you will get those same numbers every time the script is run in "
"the future."
msgstr ""
"pero de nuevo obtendrás esos mismos números cada vez que ejecutes el script "
"en el futuro."

#: testing/testing.md:226
msgid ""
"Random number seeds are a way of making things reliably random. However a "
"risk with tests that depend on random number seeds is they can be brittle. "
"Say you have a function structured something like this:"
msgstr ""
"Las semillas de números aleatorios son una forma de hacer que las cosas sean"
" aleatorias de una manera fiable. Sin embargo, un riesgo de las pruebas que "
"dependen de las semillas de números aleatorios es que pueden ser frágiles. "
"Digamos que tienes una función estructurada algo así:"

# code block
#: testing/testing.md:227
msgid ""
"```\n"
"def my_function()\n"
"\n"
"  a = calculation_that_uses_two_random_numbers()\n"
"\n"
"  b = calculation_that_uses_five_random_numbers()\n"
"\n"
"  c = a + b\n"
"```"
msgstr ""
"```\n"
"def my_function()\n"
"\n"
"  a = calculation_that_uses_two_random_numbers()\n"
"\n"
"  b = calculation_that_uses_five_random_numbers()\n"
"\n"
"  c = a + b\n"
"```"

#: testing/testing.md:237
msgid ""
"If you set the random number seed you will always get the same value of `c`,"
" so it can be tested. But, say the model is changed and the function that "
"calculates `a` uses a different number of random numbers that it did "
"previously. Now not only will `a` be different but `b` will be too, because "
"as shown above the random numbers outputted given a random number seed are "
"in a fixed order. As a result the random numbers produced to calculate `b` "
"will have changed. This can lead to tests failing when there is in fact no "
"bug."
msgstr ""
"Si se fija la semilla de números aleatorios siempre se obtendrá el mismo "
"valor de `c`, por lo que se puede probar. Pero, digamos que se cambia el "
"modelo y la función que calcula `a` utiliza un número diferente de números "
"aleatorios que antes. Ahora no sólo `a` será diferente, sino que `b` también"
" lo será, porque como se muestra arriba los números aleatorios producidos "
"dada una semilla de números aleatorios están en un orden fijo. Como "
"resultado, los números aleatorios producidos para calcular \"b\" habrán "
"cambiado. Esto puede hacer que las pruebas fallen cuando en realidad no hay "
"ningún error."

#: testing/testing.md:239
msgid "<a name=\"Measure_the_distribution_of_results\"></a>"
msgstr "<a name=\"Measure_the_distribution_of_results\"></a>"

# header
#: testing/testing.md:240
msgid "#### Measure the distribution of results"
msgstr "#### Medir la distribución de los resultados"

#: testing/testing.md:242
msgid ""
"Another way to test code with a random output is to run it many times and "
"test the distribution of the results. Perhaps the result may fluctuate a "
"little, but is always expected around 10 within some tolerance. That can be "
"tested. The more times the code is run the more reliable the average and so "
"the result. However the more times you run a piece of code the longer it "
"will take your tests to run, which may make tests prohibitively time-"
"consuming to conduct if a reliable result is to be obtained. Furthermore, "
"there will always be an element of uncertainty and if the random numbers "
"happen to fall in a certain way you may get result outside of the expected "
"tolerance even if the code is correct."
msgstr ""
"Otra forma de probar el código con una salida aleatoria es ejecutarlo muchas"
" veces y probar la distribución de los resultados. Tal vez el resultado "
"puede fluctuar un poco, pero siempre se espera alrededor de 10 dentro de "
"cierta tolerancia. Eso se puede probar. Cuantas más veces se ejecute el "
"código, más fiable será la media y, por tanto, el resultado. Sin embargo, "
"cuantas más veces se ejecute un código, más tiempo tardarán las pruebas en "
"realizarse, lo que puede hacer que las pruebas requieran un tiempo "
"prohibitivo si se quiere obtener un resultado fiable. Además, siempre habrá "
"un elemento de incertidumbre y, si los números aleatorios caen de una manera"
" determinada, es posible que se obtenga un resultado fuera de la tolerancia "
"esperada, incluso si el código es correcto."

#: testing/testing.md:244
msgid ""
"Both of these approaches to testing stochastic code can still be very "
"useful, but it is important to also be aware of their potential pitfalls."
msgstr ""
"Ambos enfoques para probar el código estocástico pueden ser muy útiles, pero"
" también es importante ser consciente de sus posibles dificultades."

#: testing/testing.md:246
msgid "<a name=\"Tests_that_are_difficult_to_quantify\"></a>"
msgstr "<a name=\"Tests_that_are_difficult_to_quantify\"></a>"

# header
#: testing/testing.md:247
msgid "### Tests that are difficult to quantify"
msgstr "### Pruebas que son difíciles de cuantificar"

#: testing/testing.md:249
msgid ""
"Sometimes (particularly in research) the outputs of code are tested "
"according to whether they \"look\" right. For example say we have a code "
"modelling the water levels in a reservoir over time. The result may look "
"like this:"
msgstr ""
"A veces (sobre todo en la investigación) los resultados del código se "
"comprueban en función de si \"parecen\" correctos. Por ejemplo, digamos que "
"tenemos un código que modela los niveles de agua en un embalse a lo largo "
"del tiempo. El resultado puede verse así:"

#: testing/testing.md:251
msgid "![eyeball_test_1](../figures/eyeball_test_1.jpg)"
msgstr "![eyeball_test_1](../figures/eyeball_test_1.jpg)"

#: testing/testing.md:253
msgid "On a day with rain it might look like this:"
msgstr "En un día con lluvia podría verse así:"

#: testing/testing.md:255
msgid "![eyeball_test_2](../figures/eyeball_test_2.jpg)"
msgstr "![eyeball_test_2](../figures/eyeball_test_2.jpg)"

#: testing/testing.md:257
msgid "and on a dry day it might look like this:"
msgstr "y en un día seco podría tener este aspecto:"

#: testing/testing.md:259
msgid "![eyeball_test_3](../figures/eyeball_test_3.jpg)"
msgstr "![eyeball_test_3](../figures/eyeball_test_3.jpg)"

#: testing/testing.md:261
msgid ""
"All of these outputs look very different but are valid. However, if a "
"researcher sees a result like this:"
msgstr ""
"Todos estos resultados parecen muy diferentes pero son válidos. Sin embargo,"
" si un investigador ve un resultado como este:"

#: testing/testing.md:263
msgid "![eyeball_test_error](../figures/eyeball_test_error.jpg)"
msgstr "![eyeball_test_error](../figures/eyeball_test_error.jpg)"

#: testing/testing.md:265
msgid ""
"they could easily conclude there is a bug as a lake is unlikely to triple "
"it's volume and then lose it again in the space of a few hours. "
"\"Eyeballing\" tests like these are time consuming as they must be done by a"
" human. However the process can be partially or fully automated by creating "
"basic \"sanity checks\". For example the water level at one time should be "
"within, say, 10% of the water level at the previous time step. Another check"
" could be that there are no negative values, as a lake can't be -30% full. "
"These sort of tests can't cover every way something can be visibly wrong, "
"but they are much easier to automate and will suffice for most cases."
msgstr ""
"podrían llegar fácilmente a la conclusión de que hay un error, ya que es "
"poco probable que un lago triplique su volumen y lo pierda de nuevo en el "
"espacio de unas pocas horas. \"Este tipo de pruebas requieren mucho tiempo, "
"ya que deben ser realizadas por un ser humano. Sin embargo, el proceso puede"
" automatizarse parcial o totalmente mediante la creación de \"comprobaciones"
" de cordura\" básicas. Por ejemplo, el nivel de agua en un momento dado debe"
" estar dentro de, digamos, el 10% del nivel de agua en el paso de tiempo "
"anterior. Otra verificación podría ser que no haya valores negativos, ya que"
" un lago no puede estar lleno al -30%. Este tipo de pruebas no pueden cubrir"
" todas las formas en que algo puede ser visiblemente incorrecto, pero son "
"mucho más fáciles de automatizar y serán suficientes para la mayoría de los "
"casos."

#: testing/testing.md:267
msgid "<a name=\"Testing_if_non_integer_numbers_are_equal\"></a>"
msgstr "<a name=\"Testing_if_non_integer_numbers_are_equal\"></a>"

# header
#: testing/testing.md:268
msgid "### Testing if non-integer numbers are equal"
msgstr "### Probar si los números no enteros son iguales"

#: testing/testing.md:270
msgid "<a name=\"When_point_1_plus_point_2_does_not_equal_point_3\"></a>"
msgstr "<a name=\"When_point_1_plus_point_2_does_not_equal_point_3\"></a>"

# header
#: testing/testing.md:271
msgid "#### When 0.1 + 0.2 does not equal 0.3"
msgstr "#### Cuando 0,1 + 0,2 no es igual a 0,3"

#: testing/testing.md:273
msgid ""
"There is a complication with testing if the answer a piece of code outputs "
"is equal to the expected answer when the numbers are not integers. Let's "
"look at this Python example, but note that this problem is not unique to "
"Python."
msgstr ""
"Existe una complicación a la hora de comprobar si la respuesta que da un "
"fragmento de código es igual a la respuesta esperada cuando los números no "
"son enteros. Veamos el siguiente ejemplo de Python, sin embargo, este "
"problema no es exclusivo de Python."

#: testing/testing.md:275
msgid ""
"If we assign 0.1 to `a` and 0.2 to `b` and print their sum, we get 0.3, as "
"expected."
msgstr ""
"Si asignamos 0,1 a `a` y 0,2 a `b` e imprimimos su suma, obtenemos 0,3, como"
" se esperaba."

# code block
#: testing/testing.md:276
msgid ""
"```\n"
">>> a = 0.1\n"
">>> b = 0.2\n"
">>> print(a + b)\n"
"0.3\n"
"```"
msgstr ""
"```\n"
">>> a = 0.1\n"
">>> b = 0.2\n"
">>> print(a + b)\n"
"0.3\n"
"```"

#: testing/testing.md:283
msgid ""
"If, however, we compare the result of `a` plus `b` to 0.3 we get False."
msgstr ""
"Sin embargo, si comparamos el resultado de `a` más `b` con 0,3 obtenemos "
"Falso."

# code block
#: testing/testing.md:284
msgid ""
"```\n"
">>> print(a + b == 0.3)\n"
"False\n"
"```"
msgstr ""
"```\n"
">>> print(a + b == 0.3)\n"
"False\n"
"```"

#: testing/testing.md:289
msgid ""
"If we show the value of `a` plus `b` directly, we can see there is a subtle "
"margin of error."
msgstr ""
"Si mostramos el valor de `a` más `b` directamente, podemos ver que hay un "
"margen sutil de error."

# code block
#: testing/testing.md:290
msgid ""
"```\n"
">>> a + b\n"
"0.30000000000000004\n"
"```"
msgstr ""
"```\n"
">>> a + b\n"
"0.30000000000000004\n"
"```"

#: testing/testing.md:295
msgid ""
"This is because floating point numbers are approximations of real numbers. "
"The result of floating point calculations can depend upon the compiler or "
"interpreter, processor or system architecture and number of CPUs or "
"processes being used. Obviously this can present a major obstacle for "
"writing tests."
msgstr ""
"Esto se debe a que los números en coma flotante son aproximaciones de los "
"números reales. El resultado de los cálculos en coma flotante puede depender"
" del compilador o intérprete, de la arquitectura del procesador o del "
"sistema y del número de CPUs o procesos que se utilicen. Obviamente, esto "
"puede suponer un gran obstáculo a la hora de escribir pruebas."

#: testing/testing.md:297
msgid "<a name=\"Equality_in_a_floating_point_world\"></a>"
msgstr "<a name=\"Equality_in_a_floating_point_world\"></a>"

# header
#: testing/testing.md:298
msgid "#### Equality in a floating point world"
msgstr "#### La igualdad en un mundo de punto flotante"

#: testing/testing.md:300
msgid ""
"When comparing floating point numbers for equality, we have to compare to "
"within a given tolerance, alternatively termed a threshold or delta. For "
"example, we might consider the calculated and expected values of some number"
" to be equal if the absolute value of their difference is within the "
"absolute value of our tolerance."
msgstr ""
"Cuando se comparan números de punto flotante para la igualdad, tenemos que "
"comparar dentro de una tolerancia dada, también llamada umbral o delta. Por "
"ejemplo, podríamos considerar que los valores calculados y esperados de "
"algún número son iguales si el valor absoluto de su diferencia está dentro "
"del valor absoluto de nuestra tolerancia."

#: testing/testing.md:302
msgid ""
"Many testing frameworks provide functions for comparing equality of floating"
" point numbers to within a given tolerance. For example for the framework "
"pytest:"
msgstr ""
"Muchos frameworks de pruebas proporcionan funciones para comparar la "
"igualdad de los números en coma flotante dentro de una tolerancia "
"determinada. Por ejemplo, para el framework pytest:"

# code block
#: testing/testing.md:303
msgid ""
"```\n"
"import pytest\n"
"\n"
"a = 0.1\n"
"b = 0.2\n"
"c = a + b\n"
"assert c == pytest.approx(0.3)\n"
"```"
msgstr ""
"```\n"
"import pytest\n"
"\n"
"a = 0.1\n"
"b = 0.2\n"
"c = a + b\n"
"assert c == pytest.approx(0.3)\n"
"```"

#: testing/testing.md:312
msgid "this passes, but if the 0.3 was changed to 0.4 it would fail."
msgstr "esto pasa, pero si se cambiara el 0,3 por el 0,4 fallaría."

#: testing/testing.md:314
msgid ""
"Unit test frameworks for other languages also often provide similar "
"functions:"
msgstr ""
"Los frameworks de pruebas unitarias para otros lenguajes también suelen "
"ofrecer funciones similares:"

# unordered list
#: testing/testing.md:316
msgid "- Cunit for C: CU_ASSERT_DOUBLE_EQUAL(actual, expected, granularity)"
msgstr "- Cunit para C: CU_ASSERT_DOUBLE_EQUAL(actual, expected, granularity)"

# unordered list
#: testing/testing.md:317
msgid ""
"- CPPUnit for C++: CPPUNIT_ASSERT_DOUBLES_EQUAL(expected, actual, delta)"
msgstr ""
"- CPPUnit para C++: CPPUNIT_ASSERT_DOUBLES_EQUAL(expected, actual, delta)"

# unordered list
#: testing/testing.md:318
msgid "- googletest for C++: ASSERT_NEAR(val1, val2, abs_error)"
msgstr "- googletest para C++: ASSERT_NEAR(val1, val2, abs_error)"

# unordered list
#: testing/testing.md:319
msgid ""
"- FRUIT for Fortran: subroutine assert_eq_double_in_range_(var1, var2, "
"delta, message)"
msgstr ""
"- FRUIT para Fortran: subroutine assert_eq_double_in_range_(var1, var2, "
"delta, message)"

# unordered list
#: testing/testing.md:320
msgid ""
"- JUnit for Java: org.junit.Assert.assertEquals(double expected, double "
"actual, double delta)"
msgstr ""
"- JUnit para Java: org.junit.Assert.assertEquals(double expected, double "
"actual, double delta)"

# unordered list
#: testing/testing.md:321
msgid "- testthat for R:"
msgstr "- testthat para R:"

# unordered list
#: testing/testing.md:322
msgid ""
"  - expect_equal(actual, expected, tolerance=DELTA) - absolute error within "
"DELTA"
msgstr ""
"  - expect_equal(actual, expected, tolerance=DELTA) - absolute error within "
"DELTA"

# unordered list
#: testing/testing.md:323
msgid ""
"  - expect_equal(actual, expected, scale=expected, tolerance=DELTA) - "
"relative error within DELTA"
msgstr ""
"  - expect_equal(actual, expected, scale=expected, tolerance=DELTA) - "
"relative error within DELTA"

#: testing/testing.md:325
msgid "<a name=\"Types_of_tests\"></a>"
msgstr "<a name=\"Types_of_tests\"></a>"

# header
#: testing/testing.md:326
msgid "## Types of tests"
msgstr "## Tipos de prueba"

#: testing/testing.md:328
msgid ""
"There are a number of different kinds of tests, which will be discussed "
"here."
msgstr "Hay varios tipos de pruebas, de las que hablaremos aquí."

#: testing/testing.md:330
msgid ""
"Firstly there are positive tests and negative tests. Positive tests check "
"that something works, for example testing that a function that multiplies "
"some numbers together outputs the correct answer. Negative tests check that "
"something generates an error when it should. For example nothing can go "
"quicker than the speed of light, so a plasma physics simulation code may "
"contain a test that an error is outputted if there are any particles faster "
"than this, as it indicates there is a deeper problem in the code."
msgstr ""
"En primer lugar, hay pruebas positivas y pruebas negativas. Las pruebas "
"positivas comprueban que algo funciona, por ejemplo, que una función que "
"multiplica varios números da la respuesta correcta. Las pruebas negativas "
"comprueban que algo genera un error cuando debería hacerlo. Por ejemplo, "
"nada puede ir más rápido que la velocidad de la luz, por lo que un código de"
" simulación de la física del plasma puede contener una prueba de que se "
"produce un error si hay partículas más rápidas que esto, ya que indica que "
"hay un problema más profundo en el código."

#: testing/testing.md:332
msgid ""
"In addition to these two kinds of tests there are also different levels of "
"tests which test different aspects of a project. These levels are outlined "
"[below](#Level_summary) and both positive and negative tests can be present "
"at any of these levels. A thorough test suite will contain tests at all of "
"these levels (though some levels will need very few)."
msgstr ""
"Además de estos dos tipos de pruebas, también hay diferentes niveles de "
"pruebas que comprueban diferentes aspectos de un proyecto. Estos niveles se "
"describen a [continuación](#Resumen_de_los_niveles) y tanto las pruebas "
"positivas como las negativas pueden estar presentes en cualquiera de estos "
"niveles. Un conjunto de pruebas completo contendrá pruebas en todos estos "
"niveles (aunque algunos niveles necesitarán muy pocas)."

#: testing/testing.md:334
msgid "<a name=\"Level_summary\"></a>"
msgstr "<a name=\"Level_summary\"></a>"

# header
#: testing/testing.md:335
msgid "### Level summary"
msgstr "### Resumen de los niveles"

#: testing/testing.md:337
msgid ""
"[Smoke testing](#Smoke_testing): Very brief initial checks that ensures the "
"basic requirements required to run the project hold. If these fail there is "
"no point proceeding to additional levels of testing until they are fixed."
msgstr ""
"[Prueba de humo](#Prueba_de_humo): Verificaciones iniciales muy breves que "
"garantizan el cumplimiento de los requisitos básicos necesarios para el "
"funcionamiento del proyecto. Si estos fallan, no tiene sentido proceder a "
"niveles adicionales de pruebas hasta que se solucionen."

#: testing/testing.md:339
msgid ""
"[Unit testing](#Unit_tests):\tA level of the software testing process where "
"individual units of a software are tested. The purpose is to validate that "
"each unit of the software performs as designed."
msgstr ""
"[Pruebas unitarias](#Pruebas_de_unidades):\tUn nivel del proceso de pruebas "
"de software en el que se prueban las unidades individuales de un software. "
"El objetivo es validar que cada unidad del software funcione como se ha "
"diseñado."

#: testing/testing.md:341
msgid ""
"[Integration testing](#Integration_testing):\tA level of software testing "
"where individual units are combined and tested as a group. The purpose of "
"this level of testing is to expose faults in the interaction between "
"integrated units."
msgstr ""
"[Pruebas de integración](#Pruebas_de_integración):\tNivel de pruebas de "
"software en el que las unidades individuales se combinan y se prueban como "
"un grupo. El objetivo de este nivel de pruebas es exponer los fallos en la "
"interacción entre las unidades integradas."

#: testing/testing.md:343
msgid ""
"[System testing](#System_tests):\tA level of the software testing process "
"where a complete, integrated system is tested. The purpose of this test is "
"to evaluate whether the system as a whole gives the correct outputs for "
"given inputs."
msgstr ""
"[Pruebas del sistema](#Pruebas_del_sistema):\tUn nivel del proceso de "
"pruebas de software en el que se prueba un sistema completo e integrado. El "
"objetivo de esta prueba es evaluar si el sistema en su conjunto ofrece las "
"salidas correctas para unas entradas determinadas."

#: testing/testing.md:345
msgid ""
"[Acceptance testing](#Acceptance_testing):\tA level of the software testing "
"process where a system is tested for acceptability. The purpose of this test"
" is to evaluate the system's compliance with the project requirements and "
"assess whether it is acceptable for the purpose."
msgstr ""
"[Prueba de aceptación](#Prueba_de_aceptación):\tNivel del proceso de prueba "
"de software en el que se comprueba la aceptabilidad de un sistema. El "
"objetivo de esta prueba es evaluar el cumplimiento del sistema con los "
"requisitos del proyecto y valorar si es aceptable para el propósito."

#: testing/testing.md:347
msgid ""
"Here's an analogy: during the process of manufacturing a ballpoint pen, the "
"cap, the body, the tail, the ink cartridge and the ballpoint are produced "
"separately and unit tested separately. When two or more units are ready, "
"they are assembled and integration testing is performed, for example a test "
"to check the cap fits on the body. When the complete pen is integrated, "
"system testing is performed to check it can be used to write like any pen "
"should. Acceptance testing could be a check to ensure the pen is the colour "
"the customer ordered."
msgstr ""
"He aquí una analogía: durante el proceso de fabricación de un bolígrafo, el "
"gorro, el cuerpo, la cola, el cartucho de tinta y el bolígrafo se producen "
"por separado y se prueban por separado. Cuando dos o más unidades están "
"listas, se ensamblan y se realizan pruebas de integración, por ejemplo una "
"prueba para comprobar que el capuchón encaja en el cuerpo. Cuando el "
"bolígrafo completo está integrado, se realizan pruebas del sistema para "
"comprobar que puede utilizarse para escribir como cualquier bolígrafo. Las "
"pruebas de aceptación pueden consistir en comprobar que el bolígrafo es del "
"color que pidió el cliente."

#: testing/testing.md:349
msgid ""
"There is also another kind of testing called regression testing. Regression "
"testing is a type of testing that can be performed at any of the four main "
"levels and compares the results of tests before and after a change is made "
"to the code, and gives an error if these are different."
msgstr ""
"También existe otro tipo de pruebas llamadas de regresión. Las pruebas de "
"regresión son un tipo de prueba que puede realizarse en cualquiera de los "
"cuatro niveles principales y que compara los resultados de las pruebas antes"
" y después de realizar un cambio en el código, y da un error si estos son "
"diferentes."

#: testing/testing.md:351
msgid "These different types of tests will now be discussed in more detail."
msgstr ""
"A continuación, examinaremos con mayor detenimiento estos diferentes tipos "
"de pruebas."

#: testing/testing.md:353
msgid "<a name=\"Smoke_testing\"></a>"
msgstr "<a name=\"Smoke_testing\"></a>"

# header
#: testing/testing.md:354
msgid "## Smoke testing"
msgstr "## Prueba de humo"

#: testing/testing.md:356
msgid ""
"Smoke tests (also known as build verification tests) are a special kind of "
"initial checks designed to ensure very basic functionality as well as some "
"basic implementation and environmental assumptions. Smoke tests are "
"generally run at the very start of each testing cycle as a sanity check "
"before running a more complete test suite."
msgstr ""
"Las pruebas de humo (también conocidas como pruebas de verificación de la "
"compilación) son un tipo especial de verificaciones iniciales diseñadas para"
" garantizar una funcionalidad muy básica, así como algunas suposiciones "
"básicas de implementación y de entorno. Las pruebas de simulación se "
"realizan generalmente al principio de cada ciclo de pruebas, como una "
"comprobación de la coherencia antes de ejecutar un conjunto de pruebas más "
"completo."

#: testing/testing.md:358
msgid ""
"The idea behind this type of test is to help to catch big red flags in an "
"implementation and to bring attention to problems that might indicate that "
"further testing is either not possible or not worthwhile. Normally, the "
"tester is asking whether any components are so obviously or badly broken "
"that the build is not worth testing or some components are broken in obvious"
" ways that suggest a corrupt build or some critical fixes that are the "
"primary intent of the new build didn't work. Smoke tests are not very "
"extensive, but should be extremely quick. If a change to a project causes it"
" to fail a smoke test, its an early signal that core assertions were broken "
"and that you should not devote any more time to testing until the problem is"
" resolved. For example if a function that reads in the data a project "
"requires to run is broken there's no point testing any further before that's"
" fixed. The typical result of a failed smoke test is rejection of the build "
"(testing of the build stops) not just a new set of bug reports."
msgstr ""
"La idea detrás de este tipo de prueba es ayudar a detectar grandes alarmas "
"en una implementación y llamar la atención sobre los problemas que podrían "
"indicar que no es posible realizar más pruebas o que no vale la pena "
"hacerlo. Normalmente, la persona que realiza las pruebas se pregunta si "
"algún componente está tan evidentemente o gravemente roto que no merece la "
"pena probar la compilación, o si algunos componentes están rotos de forma "
"evidente, lo que sugiere que la compilación está corrupta o que algunas "
"correcciones críticas que son la intención principal de la nueva compilación"
" no han funcionado. Las pruebas de humo no son muy extensas, pero deberían "
"ser extremadamente rápidas. Si un cambio en un proyecto hace que falle una "
"prueba de humo, es una señal temprana de que las afirmaciones del núcleo "
"estaban rotas y que no deberías dedicar más tiempo a las pruebas hasta que "
"el problema se resuelva. Por ejemplo, si una función que lee los datos que "
"necesita un proyecto para ejecutarse no funciona, no tiene sentido seguir "
"probando hasta que se solucione. El resultado típico de una prueba de humo "
"fallida es el rechazo de la compilación (las pruebas de la compilación se "
"detienen) no sólo un nuevo conjunto de informes de errores."

#: testing/testing.md:360
msgid "<a name=\"Unit_tests\"></a>"
msgstr "<a name=\"Unit_tests\"></a>"

# header
#: testing/testing.md:361
msgid "## Unit tests"
msgstr "## Pruebas unitarias"

#: testing/testing.md:363
msgid ""
"Unit tests are responsible for testing individual elements of code in an "
"isolated and highly targeted way. The functionality of individual functions "
"and classes are tested on their own. The purpose is to validate that each "
"unit of the software performs as designed. A unit is the smallest testable "
"part of any software. In procedural programming, a unit may be an individual"
" program, function or procedure. In object-oriented programming the smallest"
" unit is typically a method. It usually has one or a few inputs and usually "
"a single output. Any external dependencies should be replaced with [stub or "
"mock implementations](#Use_test_doubles_stubs_mocking_where_appropriate) to "
"focus the test completely on the code in question."
msgstr ""
"Las pruebas unitarias se encargan de probar elementos individuales del "
"código de forma aislada y muy específica. La funcionalidad de las funciones "
"y clases individuales se comprueba por sí sola. El objetivo es validar que "
"cada unidad del software funcione como se ha diseñado. Una unidad es la "
"parte más pequeña que se puede probar de cualquier software. En la "
"programación de procedimientos, una unidad puede ser un programa individual,"
" una función o un procedimiento. En la programación orientada a objetos, la "
"unidad más pequeña suele ser un método. Suele tener una o pocas entradas y "
"normalmente una única salida. Cualquier dependencia externa debe ser "
"sustituida por [implementaciones stub o "
"mock](#Use_test_doubles_stubs_mocking_where_appropriate) para centrar la "
"prueba completamente en el código correspondiente."

#: testing/testing.md:365
msgid ""
"Unit tests are essential to test the correctness of individual code "
"components for internal consistency and correctness before they are placed "
"in more complex contexts. The limited extent of the tests and the removal of"
" dependencies makes it easier to hunt down the cause of any defects. It also"
" is the best time to test a variety of inputs and code branches that might "
"be difficult to hit later on. For example system tests are often time "
"consuming to run and it will likely be impractical to have system tests for "
"every possible path through a code that has more than a few conditional "
"statements. Unit tests are smaller, faster, and so it is more practical to "
"cover all possible cases with them."
msgstr ""
"Las pruebas unitarias son esenciales para comprobar la coherencia interna y "
"la corrección de los componentes individuales del código antes de colocarlos"
" en contextos más complejos. La extensión limitada de las pruebas y la "
"eliminación de dependencias facilitan la búsqueda de la causa de cualquier "
"defecto. También es el mejor momento para probar una variedad de entradas y "
"ramas de código que podrían ser difíciles de atacar más adelante. Por "
"ejemplo, las pruebas del sistema suelen llevar mucho tiempo y probablemente "
"no sea práctico tener pruebas del sistema para todas las rutas posibles a "
"través de un código que tiene más de unas pocas declaraciones condicionales."
" Las pruebas unitarias son más pequeñas y rápidas, por lo que es más "
"práctico cubrir todos los casos posibles con ellas."

#: testing/testing.md:367
msgid ""
"Often, after any smoke tests, unit tests are the first tests that are run "
"when any changes are made."
msgstr ""
"A menudo, después de cualquier prueba de humo, las pruebas unitarias son las"
" primeras pruebas que se ejecutan cuando se realiza cualquier cambio."

#: testing/testing.md:369
msgid "<a name=\"Benefits_of_unit_testing\"></a>"
msgstr "<a name=\"Benefits_of_unit_testing\"></a>"

# header
#: testing/testing.md:370
msgid "### Benefits of unit testing"
msgstr "### Beneficios de las pruebas unitarias"

#: testing/testing.md:372
msgid ""
"If a researcher makes a change to a piece of code or how it is run then how "
"can they be sure that doing so has not broken something? They may run a few "
"tests, but without testing every small piece of code individually how can "
"they be certain? Unit testing gives researchers that certainty, and allows "
"them to be confident when changing and maintaining their code."
msgstr ""
"Si un investigador realiza un cambio en un fragmento de código o en la forma"
" de ejecutarlo, ¿cómo puede estar seguro de que al hacerlo no se ha roto "
"algo? Pueden realizar algunas pruebas, pero si no prueban cada pequeño "
"fragmento de código individualmente, ¿cómo pueden estar seguros? Las pruebas"
" unitarias ofrecen a los investigadores esa certeza y les permiten estar "
"seguros al cambiar y mantener su código."

#: testing/testing.md:374
msgid ""
"Here's a little example. Say a researcher has a small function that does one"
" simple thing (here only a single line for brevity). In this example this "
"will be raising a number to the 5th power:"
msgstr ""
"He aquí un pequeño ejemplo. Digamos que un investigador tiene una pequeña "
"función que hace una cosa simple (aquí sólo una línea para ser breve). En "
"este ejemplo será elevar un número a la 5ª potencia:"

# code block
#: testing/testing.md:375
msgid ""
"```\n"
"def take_fifth_power(x):\n"
"    result = x * x * x * x * x\n"
"    return result\n"
"```"
msgstr ""
"```\n"
"def take_fifth_power(x):\n"
"    result = x * x * x * x * x\n"
"    return result\n"
"```"

#: testing/testing.md:381
msgid "The unit test for this function could look like this:"
msgstr "La prueba unitaria para esta función podría ser así:"

# code block
#: testing/testing.md:382
msgid ""
"```\n"
"def test_take_fifth_power():\n"
"    assert take_fifth_power(1.5) == 7.59375\n"
"```"
msgstr ""
"```\n"
"def test_take_fifth_power():\n"
"    assert take_fifth_power(1.5) == 7.59375\n"
"```"

#: testing/testing.md:387
msgid ""
"So it checks that the correct result is outputted for a given input. If not "
"the test will fail. The researcher carries on with their work. In the middle"
" of it they decide to tidy up this function, multiplying the number five "
"times like this is a bit crude. They change the `result = x * x * x * x * x`"
" line to `result = x * 5`. Next time they run their unit tests, this test "
"will fail, because they just made a mistake. Maybe they needed a coffee, "
"maybe their finger slipped, maybe their coworker shot them in the ear with a"
" nerf dart and distracted them, but when they were tidying up this function "
"they should have written `result = x ** 5` *not* `result = x * 5`. The "
"failed test will flag up the mistake and it can quickly be corrected. If a "
"mistake like this went unobserved it could lead to serious errors in the "
"researcher's work."
msgstr ""
"Por lo tanto, comprueba que se obtiene el resultado correcto para una "
"entrada determinada. Si no es así, la prueba fallará. El investigador "
"continúa con su trabajo. En medio de él deciden poner en orden esta función,"
" multiplicar el número cinco veces así es un poco burdo. Cambian la línea "
"`result = x * x * x * x` por `result = x * 5`. La próxima vez que ejecuten "
"sus pruebas unitarias, esta prueba fallará, porque acaban de cometer un "
"error. Tal vez necesitaban un café, tal vez se les resbaló el dedo, tal vez "
"su compañero de trabajo les disparó en la oreja con un dardo nerf y les "
"distrajo, pero cuando estaban ordenando esta función deberían haber escrito "
"`result = x ** 5` *no* `result = x * 5`. La prueba fallida señalará el error"
" y se podrá corregir rápidamente. Si un error como éste pasara "
"desapercibido, podría dar lugar a graves errores en el trabajo del "
"investigador."

#: testing/testing.md:389
msgid ""
"So unit testing leads to more reliable code, but there are other benefits "
"too. Firstly it makes development faster by making bugs easier to find. "
"Larger-scale tests which test large chunks of code (while still useful) have"
" the disadvantage that if they fail it is difficult to pinpoint the source "
"of the bug. Because unit tests by their very definition test small pieces of"
" code they help developers find the cause of a bug much more quickly than "
"higher-level tests or code with no tests at all. Unit tests also make fixing"
" bugs faster and easier because they catch bugs early while they only impact"
" small individual units. If bugs are not detected early via unit tests then "
"it may be a long time before they are discovered, impacting later work that "
"built on the faulty code. This means much more code is at risk and fixing "
"the bug is more time consuming."
msgstr ""
"Así que las pruebas unitarias conducen a un código más fiable, pero también "
"hay otros beneficios. En primer lugar, agiliza el desarrollo al facilitar la"
" detección de errores. Las pruebas a gran escala que comprueban grandes "
"fragmentos de código (aunque siguen siendo útiles) tienen la desventaja de "
"que si fallan es difícil localizar el origen del problema. Dado que las "
"pruebas unitarias, por su propia definición, comprueban pequeños fragmentos "
"de código, ayudan a los desarrolladores a encontrar la causa de un error "
"mucho más rápidamente que las pruebas de nivel superior o el código sin "
"pruebas. Las pruebas unitarias también facilitan y agilizan la corrección de"
" errores, ya que los detectan con antelación cuando sólo afectan a pequeñas "
"unidades individuales. Si los errores no se detectan pronto mediante pruebas"
" unitarias, puede pasar mucho tiempo antes de que se descubran, lo que "
"afecta al trabajo posterior que se ha construido sobre el código defectuoso."
" Esto significa que hay mucho más código en riesgo y que arreglar el fallo "
"lleva más tiempo."

#: testing/testing.md:391
msgid ""
"The other major benefit of unit testing is that it strongly incentivises "
"researchers to write modular code because modular code is far easier to "
"write unit tests for. Modular code is code that is broken up into manageable"
" chunks which each accomplish simple tasks. This is typically achieved by "
"dividing the code into functions and groups of functions. In contrast a "
"script which is just one long continuous series of lines which produces a "
"result is highly non-modular."
msgstr ""
"La otra gran ventaja de las pruebas unitarias es que incentivan fuertemente "
"a los investigadores a escribir código modular, porque el código modular es "
"mucho más fácil de escribir pruebas unitarias. El código modular es un "
"código dividido en trozos manejables que realizan tareas sencillas. Esto se "
"consigue normalmente dividiendo el código en funciones y grupos de "
"funciones. Por el contrario, un script que es sólo una larga serie continua "
"de líneas que produce un resultado es altamente no modular."

#: testing/testing.md:393
msgid ""
"Modular code is much easier to reuse, for example if a researcher has a "
"individual function that does some Useful Thing and in a future project they"
" need to do that thing again it is trivial to copy or import the function. "
"In contrast if the code that does this Useful Thing is entwined with a great"
" deal of other code in a long script it is much harder to separate it out "
"for re-use."
msgstr ""
"El código modular es mucho más fácil de reutilizar, por ejemplo, si un "
"investigador tiene una función individual que hace alguna acción útil y en "
"un futuro proyecto necesita hacer esa acción de nuevo, es sencillo copiar o "
"importar la función. Por el contrario, si el código que hace esta acción "
"útil está entrelazado con una gran cantidad de otro código en un largo "
"script, es mucho más difícil separarlo para su reutilización."

#: testing/testing.md:395
msgid "<a name=\"Unit_testing_tips\"></a>"
msgstr "<a name=\"Unit_testing_tips\"></a>"

# header
#: testing/testing.md:396
msgid "### Unit testing tips"
msgstr "### Consejos para las pruebas unitarias"

# unordered list
#: testing/testing.md:398
msgid ""
"- Many testing frameworks have tools specifically geared towards writing and"
" running unit tests."
msgstr ""
"- Muchos marcos de pruebas tienen herramientas específicamente orientadas a "
"escribir y ejecutar pruebas unitarias."

# unordered list
#: testing/testing.md:399
msgid "- Isolate the development environment from the test environment."
msgstr "- Aislar el entorno de desarrollo del entorno de pruebas."

# unordered list
#: testing/testing.md:400
msgid ""
"- Write test cases that are independent of each other. For example, if a "
"unit A utilises the result of another unit B supplies you should test unit A"
" with a [test double](#Use_test_doubles_stubs_mocking_where_appropriate), "
"rather than actually calling the unit B. If you don't do this your test "
"failing may be due to a fault in either unit A *or* unit B, making the bug "
"harder to trace."
msgstr ""
"- Escribe casos de prueba que sean independientes entre sí. Por ejemplo, si "
"una unidad A utiliza el resultado de otra unidad B, debería probar la unidad"
" A con una [prueba "
"doble](#Use_test_doubles_stubs_mocking_where_appropriate), en lugar de "
"llamar a la unidad B. Si no hace esto, tu prueba puede fallar debido a un "
"fallo en la unidad A *o* en la unidad B, haciendo que el fallo sea más "
"difícil de rastrear."

# unordered list
#: testing/testing.md:401
msgid ""
"- Aim at covering all paths through a unit. Pay particular attention to loop"
" conditions."
msgstr ""
"- Intenta cubrir todos los caminos a través de una unidad. Presta especial "
"atención a las condiciones de los bucles."

# unordered list
#: testing/testing.md:402
msgid ""
"- In addition to writing cases to verify the behaviour, write cases to "
"ensure the performance of the code. For example, if a function that is "
"supposed to add two numbers takes several minutes to run there is likely a "
"problem."
msgstr ""
"- Además de escribir casos para verificar el comportamiento, escribe casos "
"para asegurar el rendimiento del código. Por ejemplo, si una función que "
"debe sumar dos números tarda varios minutos en ejecutarse es probable que "
"haya un problema."

# unordered list
#: testing/testing.md:403
msgid ""
"- If you find a defect in your code write a test that exposes it. Why? "
"First, you will later be able to catch the defect if you do not fix it "
"properly. Second, your test suite is now more comprehensive. Third, you will"
" most probably be too lazy to write the test after you have already fixed "
"the defect. Say a code has a simple function to classify people as either "
"adults or children:"
msgstr ""
"- Si encuentras un defecto en tu código escribe una prueba que lo exponga. "
"¿Por qué? En primer lugar, más tarde podrá detectar el defecto si no lo "
"corrige correctamente. En segundo lugar, su conjunto de pruebas es ahora más"
" completo. En tercer lugar, lo más probable es que te dé pereza escribir la "
"prueba cuando ya hayas corregido el defecto. Digamos que un código tiene una"
" función sencilla para clasificar a las personas como adultos o niños:"

# code block
#: testing/testing.md:405
msgid ""
"  ```\n"
"  def adult_or_child(age):\n"
"\n"
"    # If the age is greater or equal to 18 classify them as an adult\n"
"    if age >= 18:\n"
"      person_status = 'Adult'\n"
"\n"
"    # If the person is not an adult classify them as a child\n"
"    else:\n"
"      person_status = 'Child'\n"
"\n"
"    return person_status\n"
"  ```"
msgstr ""
"  ```\n"
"  def adult_or_child(age):\n"
"\n"
"    # If the age is greater or equal to 18 classify them as an adult\n"
"    if age >= 18:\n"
"      person_status = 'Adult'\n"
"\n"
"    # If the person is not an adult classify them as a child\n"
"    else:\n"
"      person_status = 'Child'\n"
"\n"
"    return person_status\n"
"  ```"

#: testing/testing.md:419
msgid "  And say this code has a unit test like this:"
msgstr " Y digamos que este código tiene una prueba unitaria como esta"

# code block
#: testing/testing.md:421
msgid ""
"  ```\n"
"  def test_adult_or_child():\n"
"\n"
"    # Test that an adult is correctly classified as an adult\n"
"    assert adult_or_child(22) == 'Adult'\n"
"\n"
"    # Test that an child is correctly classified as a child\n"
"    assert adult_or_child(5) == 'Child'\n"
"\n"
"    return\n"
"  ```"
msgstr ""
"  ```\n"
"  def test_adult_or_child():\n"
"\n"
"    # Test that an adult is correctly classified as an adult\n"
"    assert adult_or_child(22) == 'Adult'\n"
"\n"
"    # Test that an child is correctly classified as a child\n"
"    assert adult_or_child(5) == 'Child'\n"
"\n"
"    return\n"
"  ```"

#: testing/testing.md:433
msgid ""
"There's a problem with this code that isn't being tested: if a negative age "
"is supplied it will happily classify the person as a child despite negative "
"ages not being possible. The code should throw an error in this case. So "
"once the bug is fixed:"
msgstr ""
"Hay un problema con este código que no se está probando: si se suministra "
"una edad negativa, clasificará sin problemas a la persona como un niño a "
"pesar de que las edades negativas no son posibles. El código debería lanzar "
"un error en este caso. Por lo tanto, una vez que se solucione el error:"

# code block
#: testing/testing.md:434
msgid ""
"```\n"
"def adult_or_child(age):\n"
"\n"
"  # Check age is valid\n"
"  if age < 0:\n"
"    raise ValueError, 'Not possible to have a negative age'\n"
"\n"
"  # If the age is greater or equal to 18 classify them as an adult\n"
"  if age >= 18:\n"
"    person_status = 'Adult'\n"
"\n"
"  # If the person is not an adult classify them as a child\n"
"  else:\n"
"    person_status = 'Child'\n"
"\n"
"  return person_status\n"
"```"
msgstr ""
"```\n"
"def adult_or_child(age):\n"
"\n"
"  # Check age is valid\n"
"  if age < 0:\n"
"    raise ValueError, 'Not possible to have a negative age'\n"
"\n"
"  # If the age is greater or equal to 18 classify them as an adult\n"
"  if age >= 18:\n"
"    person_status = 'Adult'\n"
"\n"
"  # If the person is not an adult classify them as a child\n"
"  else:\n"
"    person_status = 'Child'\n"
"\n"
"  return person_status\n"
"```"

#: testing/testing.md:452
msgid ""
"go ahead and write a test to ensure that future changes in the code can't "
"cause it to happen again:"
msgstr ""
"seguir adelante y escribir una prueba para asegurarse de que los futuros "
"cambios en el código no puede causar que suceda de nuevo:"

# code block
#: testing/testing.md:453
msgid ""
"```  \n"
"def test_adult_or_child():\n"
"\n"
"  #Test that an adult is correctly classified as an adult\n"
"  assert adult_or_child(22) == 'Adult'\n"
"\n"
"  # Test that an child is correctly classified as a child\n"
"  assert adult_or_child(5) == 'Child'\n"
"\n"
"  # Test that supplying an invalid age results in an error\n"
"  with pytest.raises(ValueError):\n"
"      adult_or_child(-10)\n"
"```"
msgstr ""
"```  \n"
"def test_adult_or_child():\n"
"\n"
"  #Test that an adult is correctly classified as an adult\n"
"  assert adult_or_child(22) == 'Adult'\n"
"\n"
"  # Test that an child is correctly classified as a child\n"
"  assert adult_or_child(5) == 'Child'\n"
"\n"
"  # Test that supplying an invalid age results in an error\n"
"  with pytest.raises(ValueError):\n"
"      adult_or_child(-10)\n"
"```"

#: testing/testing.md:467
msgid "<a name=\"Integration_testing\"></a>"
msgstr "<a name=\"Integration_testing\"></a>"

# header
#: testing/testing.md:468
msgid "## Integration testing"
msgstr "## Integration testing"

#: testing/testing.md:470
msgid ""
"Integration testing is a level of software testing where individual units "
"are combined and tested as a group. While unit tests validate the "
"functionality of code in isolation, integration tests ensure that components"
" cooperate when interfacing with one another. The purpose of this level of "
"testing is to expose faults in the interaction between integrated units."
msgstr ""
"Las pruebas de integración son un nivel de pruebas de software en el que las"
" unidades individuales se combinan y se prueban como un grupo. Mientras que "
"las pruebas unitarias validan la funcionalidad del código de forma aislada, "
"las pruebas de integración garantizan que los componentes cooperan cuando se"
" interconectan entre sí. El objetivo de este nivel de pruebas es exponer los"
" fallos en la interacción entre las unidades integradas."

#: testing/testing.md:472
msgid ""
"For example, maybe a unit that reads in some data is working and passes its "
"unit tests, and the following unit that cleans up the data once it's been "
"read in is also working and passes its tests. However say the first unit "
"outputs the data as (time_data, temperature_data) but the function that "
"cleans the data expects input of the form (temperature_data, time_data). "
"This can obviously lead to bugs. While the units are correct there in an "
"error in their integration."
msgstr ""
"Por ejemplo, puede que una unidad que lee unos datos funcione y pase sus "
"pruebas unitarias, y que la siguiente unidad que limpia los datos una vez "
"leídos también funcione y pase sus pruebas. Sin embargo, digamos que la "
"primera unidad da salida a los datos como (datos_tiempo, datos_temperatura) "
"pero la función que limpia los datos espera una entrada de la forma "
"(datos_temperatura, datos_tiempo). Obviamente, esto puede dar lugar a "
"errores. Mientras que las unidades son correctas hay un error en su "
"integración."

#: testing/testing.md:474
msgid ""
"An example of an integration test for this case could be to supply a test "
"data file, use these functions to read it in and clean it, and check the "
"resulting cleaned data against what would be expected. If a bug like this is"
" present then the cleaned data outputted would be very unlikely to match the"
" expected result, and an error would be raised."
msgstr ""
"Un ejemplo de prueba de integración para este caso podría ser suministrar un"
" archivo de datos de prueba, utilizar estas funciones para leerlo y "
"limpiarlo, y comprobar los datos limpiados resultantes con lo que se "
"esperaba. Si hay un error de este tipo, es muy poco probable que los datos "
"limpiados que se obtengan coincidan con el resultado esperado, y se "
"producirá un error."

#: testing/testing.md:476
msgid ""
"Integration testing is particularly important in collaborative projects "
"where different people work on different parts of the code. If two different"
" people complete separate units and then need to integrate then integration "
"issues are more likely as neither may understand the other's code. A famous "
"example of this is a multi-million dollar satellite which "
"[crashed](https://en.wikipedia.org/wiki/Mars_Climate_Orbiter) because one "
"piece of code outputted distance data in feet, while another assumed data in"
" meters. This is another example of an integration issue."
msgstr ""
"Las pruebas de integración son especialmente importantes en los proyectos de"
" colaboración en los que diferentes personas trabajan en distintas partes "
"del código. Si dos personas diferentes completan unidades separadas y luego "
"tienen que integrarlas, los problemas de integración son más probables, ya "
"que ninguno de ellos puede entender el código del otro. Un ejemplo famoso es"
" el de un satélite multimillonario que se "
"[estrelló](https://en.wikipedia.org/wiki/Mars_Climate_Orbiter) porque una "
"parte del código daba los datos de la distancia en pies, mientras que otra "
"asumía los datos en metros. Este es otro ejemplo de problema de integración."

#: testing/testing.md:478
msgid ""
"A sub type of integration testing is system integration testing. This tests "
"the integration of systems, packages and any interfaces to external "
"organizations (such as Electronic Data Interchange, Internet). Depending on "
"the nature of a project system integration testing may or may not be "
"applicable."
msgstr ""
"Un subtipo de prueba de integración es la prueba de integración de sistemas."
" En ellas se comprueba la integración de sistemas, paquetes y cualquier "
"interfaz con organizaciones externas (como el intercambio electrónico de "
"datos o Internet). Dependiendo de la naturaleza del proyecto, las pruebas de"
" integración del sistema pueden ser aplicables o no."

#: testing/testing.md:480
msgid "<a name=\"Approaches\"></a>"
msgstr "<a name=\"Approaches\"></a>"

# header
#: testing/testing.md:481
msgid "### Approaches"
msgstr "### Enfoques"

#: testing/testing.md:483
msgid ""
"There are several different approaches to integration testing. Big Bang is "
"an approach to integration testing where all or most of the units are "
"combined together and tested at one go. This approach is taken when the "
"testing team receives the entire software in a bundle. So what is the "
"difference between Big Bang integration testing and system testing? Well, "
"the former tests only the interactions between the units while the latter "
"tests the entire system."
msgstr ""
"Hay varios enfoques diferentes para las pruebas de integración. El Big Bang "
"es un enfoque de las pruebas de integración en el que todas o la mayoría de "
"las unidades se combinan y se prueban de una sola vez. Este enfoque se "
"adopta cuando el equipo de pruebas recibe todo el software en un paquete. "
"¿Cuál es la diferencia entre las pruebas de integración Big Bang y las "
"pruebas del sistema? Pues que las primeras sólo prueban las interacciones "
"entre las unidades, mientras que las segundas prueban todo el sistema."

#: testing/testing.md:485
msgid ""
"Top Down is an approach to integration testing where top-level sections of "
"the code (that themselves contain many smaller units) are tested first and "
"lower level units are tested step by step after that. So is a code can be "
"split into the main steps A, B, and C, and each of those  contain steps to "
"complete them, and these steps may have substeps like:"
msgstr ""
"Top Down es un enfoque de las pruebas de integración en el que las secciones"
" de nivel superior del código (que a su vez contienen muchas unidades más "
"pequeñas) se prueban primero y las unidades de nivel inferior se prueban "
"paso a paso después. Así, un código puede dividirse en los pasos principales"
" A, B y C, y cada uno de ellos contiene pasos para completarlos, y estos "
"pasos pueden tener subpasos como:"

# unordered list
#: testing/testing.md:487
msgid "- A"
msgstr "- A"

# unordered list
#: testing/testing.md:488
msgid "  - A.1"
msgstr "  - A.1"

# unordered list
#: testing/testing.md:489
msgid "    - A.1.1"
msgstr "    - A.1.1"

# unordered list
#: testing/testing.md:490
msgid "    - A.1.2"
msgstr "    - A.1.2"

# unordered list
#: testing/testing.md:491
msgid "  - A.2"
msgstr "  - A.2"

# unordered list
#: testing/testing.md:492
msgid "- B"
msgstr "- B"

# unordered list
#: testing/testing.md:493
msgid "  - B.1"
msgstr "  - B.1"

# unordered list
#: testing/testing.md:494
msgid "  - B.2"
msgstr "  - B.2"

# unordered list
#: testing/testing.md:495
msgid "    - B.2.1"
msgstr "    - B.2.1"

# unordered list
#: testing/testing.md:496
msgid "    - B.2.2"
msgstr "    - B.2.2"

# unordered list
#: testing/testing.md:497
msgid "    - B.2.3"
msgstr "    - B.2.3"

# unordered list
#: testing/testing.md:498
msgid "  - B.3"
msgstr "  - B.3"

# unordered list
#: testing/testing.md:501
msgid "  - C.1"
msgstr "  - C.1"

# unordered list
#: testing/testing.md:502
msgid "    - C.1.1"
msgstr "    - C.1.1"

# unordered list
#: testing/testing.md:503
msgid "    - C.1.2"
msgstr "    - C.1.2"

# unordered list
#: testing/testing.md:504
msgid "  - C.2"
msgstr "  - C.2"

# unordered list
#: testing/testing.md:505
msgid "    - C.2.1"
msgstr "    - C.2.1"

# unordered list
#: testing/testing.md:506
msgid "    - C.2.2"
msgstr "    - C.2.2"

#: testing/testing.md:508
msgid ""
"So in the top down approach the integration between sections at the top "
"level (A, B and C) are tested, then integration between sections at the next"
" level (for example, A.1 -> A.2) and so on. Testing upper level units by "
"running all the code they contain including running lower level ones can "
"lead to upper level tests breaking due to bugs in low level units. This is "
"undesirable, so to prevent this the lower level sections should not be run, "
"but [test stubs](#Use_test_doubles_stubs_mocking_where_appropriate) should "
"be used to simulate the outputs from them."
msgstr ""
"Así, en el enfoque descendente se prueba la integración entre las secciones "
"del nivel superior (A, B y C), luego la integración entre las secciones del "
"siguiente nivel (por ejemplo, A.1 -> A.2) y así sucesivamente. Probar las "
"unidades de nivel superior ejecutando todo el código que contienen, "
"incluyendo la ejecución de las de nivel inferior, puede llevar a que las "
"pruebas de nivel superior se rompan debido a fallos en las unidades de nivel"
" inferior. Esto no es deseable, por lo que para evitarlo no deben ejecutarse"
" las secciones de nivel inferior, sino que deben utilizarse [prueba de "
"simulación](#Use_test_doubles_stubs_mocking_where_appropriate) para simular "
"las salidas de las mismas."

#: testing/testing.md:510
msgid ""
"Bottom Up is an approach to integration testing where integration between "
"bottom level sections are tested first and upper-level sections step by step"
" after that. Again test stubs should be used, in this case to simulate "
"inputs from higher level sections."
msgstr ""
"Bottom Up es un enfoque de las pruebas de integración en el que la "
"integración entre las secciones de nivel inferior se prueba primero y las "
"secciones de nivel superior paso a paso después. Una vez más, hay que "
"utilizar las prueba simulación, en este caso para simular las entradas de "
"las secciones de nivel superior."

#: testing/testing.md:512
msgid ""
"Sandwich/Hybrid is an approach to integration testing which is a combination"
" of Top Down and Bottom Up approaches."
msgstr ""
"Sándwich/Híbrido es un enfoque de las pruebas de integración que es una "
"combinación de los enfoques Top Down y Bottom Up."

#: testing/testing.md:514
msgid ""
"Which approach you should use will depend on which best suits the "
"nature/structure of your project."
msgstr ""
"El enfoque que deba utilizar dependerá del que mejor se adapte a la "
"naturaleza/estructura de su proyecto."

#: testing/testing.md:516
msgid "<a name=\"Integration_testing_tips\"></a>"
msgstr "<a name=\"Integration_testing_tips\"></a>"

# header
#: testing/testing.md:517
msgid "### Integration testing tips"
msgstr "### Consejos para las pruebas de integración"

# unordered list
#: testing/testing.md:519
msgid ""
"- Ensure that you have a proper Detail Design document where interactions "
"between each unit are clearly defined. It is difficult or impossible to "
"perform integration testing without this information."
msgstr ""
"- Asegúrate de que dispone de un documento de diseño detallado adecuado en "
"el que las interacciones entre cada unidad estén claramente definidas. Es "
"difícil o imposible realizar pruebas de integración sin esta información."

# unordered list
#: testing/testing.md:520
msgid ""
"- Make sure that each unit is unit tested and fix any bugs before you start "
"integration testing. If there is a bug in the individual units then the "
"integration tests will almost certainly fail even if there is no error in "
"how they are integrated."
msgstr ""
"- Asegúrate de que cada unidad se somete a pruebas unitarias y corrige "
"cualquier error antes de empezar las pruebas de integración. Si hay un error"
" en las unidades individuales, es casi seguro que las pruebas de integración"
" fallarán aunque no haya ningún error en la forma de integrarlas."

# unordered list
#: testing/testing.md:521
msgid "- Use mocking/stubs where appropriate."
msgstr "- Utilizar burlas/esquemas cuando sea necesario."

#: testing/testing.md:523
msgid "<a name=\"System_tests\"></a>"
msgstr "<a name=\"System_tests\"></a>"

# header
#: testing/testing.md:524
msgid "## System tests"
msgstr "## Pruebas del sistema"

#: testing/testing.md:526
msgid ""
"Once integration tests are performed, another level of testing called system"
" testing can begin. System testing is a level of software testing where a "
"complete and integrated software is tested. The tester supplies the program "
"with input and verifies if the program's output is correct. If it is not "
"then there is a problem somewhere in the system. Note that this does not "
"have to be done manually, it can be automated. The purpose of these tests is"
" to evaluate the system's compliance with the specified requirements. In "
"many ways, system testing acts as an extension to integration testing. The "
"focus of system tests are to make sure that groups of components function "
"correctly as a cohesive whole."
msgstr ""
"Una vez realizadas las pruebas de integración, puede comenzar otro nivel de "
"pruebas denominado pruebas del sistema. Las pruebas del sistema son un nivel"
" de pruebas de software en el que se comprueba un software completo e "
"integrado. El probador suministra al programa una entrada y verifica si la "
"salida del programa es correcta. Si no lo es, hay un problema en alguna "
"parte del sistema. Hay que tener en cuenta que esto no tiene que hacerse "
"manualmente, sino que puede automatizarse. El objetivo de estas pruebas es "
"evaluar la conformidad del sistema con los requisitos especificados. En "
"muchos sentidos, las pruebas del sistema son una extensión de las pruebas de"
" integración. El objetivo de las pruebas del sistema es asegurarse de que "
"los grupos de componentes funcionan correctamente como un todo cohesionado."

#: testing/testing.md:527
msgid ""
"However, instead of focusing on the interfaces between components, system "
"tests typically evaluate the outward functionality of a full piece of "
"software. This set of tests ignores the constituent parts in order to gauge "
"the composed software as a unified entity. Because of this distinction, "
"system tests usually focus on user- or externally-accessible outputs."
msgstr ""
"Sin embargo, en lugar de centrarse en las interfaces entre componentes, las "
"pruebas del sistema suelen evaluar la funcionalidad externa de una pieza "
"completa de software. Este conjunto de pruebas ignora las partes "
"constituyentes para evaluar el software compuesto como una entidad "
"unificada. Debido a esta distinción, las pruebas del sistema suelen "
"centrarse en los resultados accesibles al usuario o al exterior."

#: testing/testing.md:529
msgid ""
"System testing can also test features of the system other than correctness. "
"Examples include:"
msgstr ""
"Las pruebas del sistema también pueden comprobar características del sistema"
" distintas de la corrección. Algunos ejemplos son:"

# unordered list
#: testing/testing.md:531
msgid ""
"- Performance testing: does the program performance meet the minimum "
"requirements? A performance test may measure how long the system takes to "
"run in a given case."
msgstr ""
"- Pruebas de rendimiento: ¿el rendimiento del programa cumple los requisitos"
" mínimos? Una prueba de rendimiento puede medir el tiempo que tarda el "
"sistema en ejecutarse en un caso determinado."

# unordered list
#: testing/testing.md:532
msgid ""
"- Migration testing: does the program work when transferred to another "
"computational environment?"
msgstr ""
"- Pruebas de migración: ¿funciona el programa cuando se transfiere a otro "
"entorno informático?"

# unordered list
#: testing/testing.md:533
msgid ""
"- Stress/scale/load testing: testing how the program behaves when under "
"stress, for example, when required to process very large volumes of data."
msgstr ""
"- Pruebas de estrés/escala/carga: comprobar cómo se comporta el programa en "
"situaciones de estrés, por ejemplo, cuando se le pide que procese un gran "
"volumen de datos."

# unordered list
#: testing/testing.md:534
msgid ""
"- Usability testing: how user-friendly is the program (more common in "
"commercial software, tests typically conducted by humans rather than "
"automated)."
msgstr ""
"- Pruebas de usabilidad: cómo de fácil es el programa (más común en el "
"software comercial, las pruebas suelen ser realizadas por humanos en lugar "
"de automatizadas)."

# unordered list
#: testing/testing.md:535
msgid ""
"- Recovery testing: Can the program continue if errors occur (again, more "
"common in commercial software)."
msgstr ""
"- Pruebas de recuperación: El programa puede continuar si se producen "
"errores (de nuevo, es más común en el software comercial)."

#: testing/testing.md:537
msgid "<a name=\"System_testing_tips\"></a>"
msgstr "<a name=\"System_testing_tips\"></a>"

# header
#: testing/testing.md:538
msgid "### System testing tips"
msgstr "### Consejos para las pruebas del sistema"

#: testing/testing.md:540
msgid ""
"System tests, also called end-to-end tests, run the program, well, from end "
"to end. As such these are the most time consuming tests to run. Therefore "
"you should only run these if all the lower-level tests (smoke, unit, "
"integration) have already passed. If they haven't fix the issues they have "
"detected first before wasting time running system tests."
msgstr ""
"Las pruebas del sistema, también llamadas pruebas de final a final, ejecutan"
" el programa de principio a fin. Por ello, son las que más tiempo. Por lo "
"tanto, sólo debe ejecutarlas si todas las pruebas de nivel inferior "
"(simulación, unidad, integración) ya han pasado. Si no lo han hecho, arregla"
" primero los problemas que han detectado antes de perder el tiempo "
"ejecutando las pruebas del sistema."

#: testing/testing.md:542
msgid ""
"Because of their time-consuming nature it will also often be impractical to "
"have enough system tests to trace every possible route through a program, "
"especially is there are a significant number of conditional statements. "
"Therefore you should consider the system test cases you run carefully and "
"prioritise:"
msgstr ""
"Debido a su naturaleza, que consume mucho tiempo, a menudo no es práctico "
"tener suficientes pruebas del sistema para rastrear todas las rutas posibles"
" a través de un programa, especialmente si hay un número significativo de "
"declaraciones condicionales. Por lo tanto, hay que considerar cuidadosamente"
" los casos de prueba del sistema que se ejecutan y priorizarlos:"

# unordered list
#: testing/testing.md:544
msgid "- The most common routes through a program."
msgstr "- Las rutas más comunes a través de un programa."

# unordered list
#: testing/testing.md:545
msgid ""
"- The most important routes for a program. For example, the LIGO detector "
"aims to find gravitational wave events, which are extremely rare. If there's"
" a bug in that path through the program which monitors the detector then "
"it's a *huge* problem."
msgstr ""
"- Las rutas más importantes para un programa. Por ejemplo, el detector LIGO "
"tiene como objetivo encontrar eventos de ondas gravitacionales, que son "
"extremadamente raros. Si hay un error en esa ruta a través del programa que "
"monitoriza el detector entonces es un *gran problema*."

# unordered list
#: testing/testing.md:546
msgid ""
"- Cases that are prone to breakage due to structural problems within the "
"program. Though ideally it's better to just fix those problems, but cases "
"exist where this may not be feasible."
msgstr ""
"- Casos que son propensos a romperse debido a problemas estructurales dentro"
" del programa. Aunque lo ideal es arreglar simplemente esos problemas, pero "
"existen casos en los que esto puede no ser factible."

#: testing/testing.md:548
msgid ""
"Because system tests can be time consuming it may be impractical to run them"
" very regularly (such as multiple times a day after small changes in the "
"code). Therefore it can be a good idea to run them each night (and to "
"automate this process) so that if errors are introduced that only system "
"testing can detect the programmer will be made of them relatively quickly."
msgstr ""
"Dado que las pruebas del sistema pueden requerir mucho tiempo, puede "
"resultar poco práctico ejecutarlas con mucha regularidad (por ejemplo, "
"varias veces al día tras pequeños cambios en el código). Por lo tanto, puede"
" ser una buena idea ejecutarlas cada noche (y automatizar este proceso) para"
" que si se introducen errores que sólo las pruebas del sistema pueden "
"detectar, el programador se entere de ellos con relativa rapidez."

#: testing/testing.md:550
msgid "<a name=\"Acceptance_testing\"></a>"
msgstr "<a name=\"Acceptance_testing\"></a>"

# header
#: testing/testing.md:551
msgid "## Acceptance testing"
msgstr "## Pruebas de aceptación"

#: testing/testing.md:553
msgid ""
"Acceptance tests are one of the last tests types that are performed on "
"software prior to delivery. Acceptance testing is used to determine whether "
"a piece of software satisfies all of the requirements from the business or "
"user's perspective. Does this piece of software do what it needs to do? "
"These tests are sometimes built against the original specification."
msgstr ""
"Las pruebas de aceptación son uno de los últimos tipos de pruebas que se "
"realizan en el software antes de su entrega. Las pruebas de aceptación "
"sirven para determinar si un programa informático satisface todos los "
"requisitos desde el punto de vista de la empresa o del usuario. ¿Hace este "
"software lo que tiene que hacer? A veces, estas pruebas se realizan a partir"
" de la especificación original."

#: testing/testing.md:555
msgid ""
"Because research software is typically written by the researcher that will "
"use it (or at least with significant input from them) acceptance tests may "
"not be necessary."
msgstr ""
"Dado que el software de investigación suele ser escrito por el investigador "
"que lo va a utilizar (o, al menos, con una aportación importante por su "
"parte), las pruebas de aceptación pueden no ser necesarias."

#: testing/testing.md:557
msgid "<a name=\"Regression_testing\"></a>"
msgstr "<a name=\"Regression_testing\"></a>"

# header
#: testing/testing.md:558
msgid "## Regression testing"
msgstr "## Prueba de regresión"

#: testing/testing.md:560
msgid ""
"Regression testing is a style of testing that focuses on retesting after "
"changes are made. The results of tests after the changes are compared to the"
" results before, and errors are raised if these are different. Regression "
"testing is intended to ensure that changes (enhancements or defect fixes) to"
" the software have not adversely affected it. The likelihood of any code "
"change impacting functionalities that are not directly associated with the "
"code is always there and it is essential that regression testing is "
"conducted to make sure that fixing one thing has not broken another. "
"Regression testing can be performed during any level of testing (unit, "
"integration, system, or acceptance) but it is mostly relevant during system "
"testing. Any test can be reused, and so any test can become a regression "
"test."
msgstr ""
"Las pruebas de regresión son un estilo de prueba que se centra en volver a "
"probar después de realizar cambios. Los resultados de las pruebas después de"
" los cambios se comparan con los resultados anteriores, y se plantean "
"errores si son diferentes. Las pruebas de regresión pretenden garantizar que"
" los cambios (mejoras o correcciones de defectos) realizados en el software "
"no lo han afectado negativamente. La probabilidad de que cualquier cambio de"
" código afecte a funcionalidades que no están directamente asociadas al "
"código siempre está ahí y es esencial que se realicen pruebas de regresión "
"para asegurarse de que al arreglar una cosa no se ha roto otra. Las pruebas "
"de regresión pueden realizarse durante cualquier nivel de pruebas "
"(unitarias, de integración, del sistema o de aceptación), pero son más "
"relevantes durante las pruebas del sistema. Cualquier prueba puede "
"reutilizarse, por lo que cualquier prueba puede convertirse en una prueba de"
" regresión."

#: testing/testing.md:562
msgid ""
"Regression testing is obviously especially important in team working, but it"
" is surprisingly easy to break your own code without noticing it, even if "
"you are working on your own. And because regression testing is next to "
"impossible to do satisfactorily by hand (it's simply too tedious), it's an "
"obvious case for automation."
msgstr ""
"Las pruebas de regresión son, obviamente, especialmente importantes en el "
"trabajo en equipo, pero es sorprendentemente fácil romper tu propio código "
"sin darte cuenta, incluso si estás trabajando por tu cuenta. Y dado que las "
"pruebas de regresión son prácticamente imposibles de realizar de forma "
"satisfactoria a mano (es simplemente demasiado tedioso), es un ejemplo obvio"
" para la automatización."

#: testing/testing.md:564
msgid ""
"Regression tests are written by first running the (or part of the) code for "
"given inputs and recording the outputs. This could be done by writing input "
"files and saving the corresponding output files. These outputs serve as the "
"expected outputs from the program given the corresponding inputs. Regression"
" tests are then written. Each regression test runs the code for the set of "
"inputs. It then compares the output from the code to the expected outputs, "
"and raises an error if these do not match."
msgstr ""
"Las pruebas de regresión se escriben ejecutando primero el código (o parte "
"de él) para unas entradas determinadas y registrando las salidas. Esto puede"
" hacerse escribiendo archivos de entrada y guardando los correspondientes "
"archivos de salida. Estas salidas sirven como salidas esperadas del programa"
" dadas las entradas correspondientes. A continuación, se escriben las "
"pruebas de regresión. Cada prueba de regresión ejecuta el código para el "
"conjunto de entradas. Posteriormente, se compara la salida del código con "
"las salidas esperadas y se produce un error si no coinciden."

#: testing/testing.md:566
msgid ""
"Regression testing approaches differ in their focus. Common examples "
"include:"
msgstr ""
"Los enfoques de las pruebas de regresión difieren en su enfoque. Algunos "
"ejemplos comunes son:"

# unordered list
#: testing/testing.md:568
msgid ""
"- Bug regression: We retest a specific bug that has been allegedly fixed."
msgstr ""
"- Regresión de errores: Volvemos a probar un error específico que "
"supuestamente se ha solucionado."

# unordered list
#: testing/testing.md:569
msgid ""
"- Old fix regression testing: We retest several old bugs that were fixed, to"
" see if they are back. (This is the classical notion of regression: the "
"program has regressed to a bad state.)"
msgstr ""
"- Pruebas de regresión de arreglos antiguos: Volvemos a probar varios "
"errores antiguos que fueron corregidos, para ver si vuelven a aparecer. "
"(Esta es la noción clásica de regresión: el programa ha retrocedido a un mal"
" estado)."

# unordered list
#: testing/testing.md:570
msgid ""
"- General functional regression: We retest the project broadly, including "
"areas that worked before, to see whether more recent changes have "
"destabilized working code."
msgstr ""
"- Regresión funcional general: Volvemos a probar el proyecto en general, "
"incluyendo las áreas que funcionaban antes, para ver si los cambios más "
"recientes han desestabilizado el código de trabajo."

# unordered list
#: testing/testing.md:571
msgid ""
"- Conversion or port testing: The program is ported to a new platform and a "
"regression test suite is run to determine whether the port was successful."
msgstr ""
"- Pruebas de conversión o portabilidad: El programa se traslada a una nueva "
"plataforma y se ejecuta un conjunto de pruebas de regresión para determinar "
"si el traslado se ha realizado correctamente."

# unordered list
#: testing/testing.md:572
msgid ""
"- Configuration testing: The program is run with a new device or on a new "
"version of the operating system or in conjunction with a new application. "
"This is like port testing except that the underlying code hasn't been "
"changed--only the external components that the software under test must "
"interact with."
msgstr ""
"- Prueba de configuración: El programa se ejecuta con un nuevo dispositivo o"
" en una nueva versión del sistema operativo o junto con una nueva "
"aplicación. Es como una prueba de portabilidad, salvo que el código "
"subyacente no se ha modificado, sino los componentes externos con los que "
"debe interactuar el software que se está probando."

#: testing/testing.md:574
msgid "<a name=\"Limitations\"></a>"
msgstr "<a name=\"Limitations\"></a>"

# header
#: testing/testing.md:575
msgid "### Limitations"
msgstr "Limitaciones"

#: testing/testing.md:577
msgid ""
"Regression tests are not guaranteed to test all parts of the code. Most "
"importantly, regression tests do not test if the result outputted by a piece"
" of code is *correct*, only that is has not changed. This the remit of other"
" kinds of tests, though regression tests can serve as the starting point for"
" introducing tests for correctness, by both the use of analytical solutions,"
" and test functions which read output files and check the data for "
"correctness, as defined by a researcher."
msgstr ""
"Las pruebas de regresión no garantizan la comprobación de todas las partes "
"del código. Y lo que es más importante, las pruebas de regresión no "
"comprueban si el resultado obtenido por un fragmento de código es "
"*correcto*, sino que no ha cambiado. Este es el objetivo de otros tipos de "
"pruebas, aunque las pruebas de regresión pueden servir como punto de partida"
" para introducir pruebas de corrección, tanto mediante el uso de soluciones "
"analíticas como de funciones de prueba que lean los archivos de salida y "
"comprueben la corrección de los datos, según lo definido por la persona que "
"diseña el código."

#: testing/testing.md:579
msgid "<a name=\"Runtime_testing\"></a>"
msgstr "<a name=\"Runtime_testing\"></a>"

# header
#: testing/testing.md:580
msgid "## Runtime testing"
msgstr "## Pruebas en tiempo de ejecución"

#: testing/testing.md:582
msgid ""
"Runtime tests are tests that run as part of the program itself. They may "
"take the form of checks within the code, as shown below:"
msgstr ""
"Las pruebas en tiempo de ejecución (o \"runtime tests\" en inglés) son "
"pruebas que se ejecutan como parte del propio programa. Pueden adoptar la "
"forma de comprobaciones dentro del código, como se muestra a continuación:"

# code block
#: testing/testing.md:583
msgid ""
"```\n"
"population = population + people_born - people_died\n"
"\n"
"// test that the population is positive\n"
"if (population < 0):\n"
"  error( 'The number of people can never be negative' )\n"
"```"
msgstr ""
"```\n"
"poblacion = poblacion + personas_nacidas - personas_muertas\n"
"\n"
"// comprueba que la población es positiva\n"
"si (población < 0):\n"
"error( 'El número de personas nunca puede ser negativo' )\n"
"```"

#: testing/testing.md:591
msgid ""
"Another example of a use of runtime tests is internal checks within "
"functions that verify that their inputs and outputs are valid, as shown "
"below:"
msgstr ""
"Otro ejemplo de uso de las pruebas en tiempo de ejecución son las "
"comprobaciones internas dentro de las funciones que verifican que sus "
"entradas y salidas son válidas, como se muestra a continuación:"

# code block
#: testing/testing.md:592
msgid ""
"```\n"
"function add_arrays( array1, array2 ):\n"
"\n"
"  // test that the arrays have the same size\n"
"  if (array1.size() != array2.size()):\n"
"    error( 'The arrays have different sizes!' )\n"
"\n"
"  output = array1 + array2\n"
"\n"
"  if (output.size() != array1.size()):\n"
"    error( 'The output array has the wrong size!'' )\n"
"\n"
"  return output\n"
"```"
msgstr ""
"```\n"
"function sumar_arreglos( array1, array2 ):\n"
"\n"
"// comprueba que las matrices tienen el mismo tamaño\n"
"if (array1.size() != array2.size()):\n"
"error( '¡Las matrices tienen tamaños diferentes!' )\n"
"\n"
"salida = array1 + array2\n"
"\n"
"if (salida.size() != array1.size()):\n"
"error( '¡La matriz de salida tiene un tamaño incorrecto!' )\n"
"\n"
"return output\n"
"```"

#: testing/testing.md:607
msgid "Advantages of runtime testing:"
msgstr "Ventajas de las pruebas en tiempo de ejecución:"

# unordered list
#: testing/testing.md:609
msgid ""
"- Run within the program, so can catch problems caused by logic errors or "
"edge cases."
msgstr ""
"- Se ejecuta dentro del programa, por lo que puede detectar problemas "
"causados por errores lógicos o casos límite."

# unordered list
#: testing/testing.md:610
msgid ""
"- Makes it easier to find the cause of the bug by catching problems early."
msgstr ""
"- Facilita la búsqueda de la causa del fallo al detectar los problemas con "
"antelación."

# unordered list
#: testing/testing.md:611
msgid ""
"- Catching problems early also helps prevent them escalating into "
"catastrophic failures. It minimises the blast radius."
msgstr ""
"- Detectar los problemas a tiempo también ayuda a evitar que se conviertan "
"en fallos catastróficos. Se minimiza el radio de explosión."

#: testing/testing.md:613
msgid "Disadvantages of runtime testing:"
msgstr "Desventajas de las pruebas en tiempo de ejecución:"

# unordered list
#: testing/testing.md:615
msgid "- Tests can slow down the program."
msgstr "- Las pruebas pueden ralentizar el programa."

# unordered list
#: testing/testing.md:616
msgid ""
"- What is the right thing to do if an error is detected? How should this "
"error be reported? Exceptions are a recommended route to go with this."
msgstr ""
"- ¿Qué hay que hacer si se detecta un error? ¿Cómo se debe informar de este "
"error? Las excepciones son una vía recomendada para ello."

#: testing/testing.md:618
msgid "<a name=\"Test_driven_development\"></a>"
msgstr "<a name=\"Test_driven_development\"></a>"

# header
#: testing/testing.md:619
msgid "## Test driven development"
msgstr "## Desarrollo basado en pruebas"

#: testing/testing.md:621
msgid ""
"One way of ensuring tests are not neglected in a project is to adopt test-"
"driven development. This is an approach in which unit tests are written "
"before the code. The tests thus describe a \"contract\" that the code is "
"expected to comply with. This ensures that the code will be correct (as far "
"as can be enforced by the testing contract) as written, and it provides a "
"useful framework for thinking about how the code should be designed, what "
"interfaces it should provide, and how its algorithms might work. This can be"
" a very satisfying mental aid in developing tricky algorithms."
msgstr ""
"Una forma de garantizar que no se descuiden las pruebas en un proyecto es "
"adoptar el desarrollo dirigido por pruebas. Se trata de un enfoque en el que"
" las pruebas unitarias se escriben antes que el código. Así, las pruebas "
"describen un \"contrato\" que se espera que cumpla el código. Esto garantiza"
" que el código será correcto (en la medida en que pueda ser aplicado por el "
"contrato de pruebas) tal y como está escrito, y proporciona un marco útil "
"para pensar en cómo debería diseñarse el código, qué interfaces debería "
"proporcionar y cómo podrían funcionar sus algoritmos. Puede ser una ayuda "
"mental muy satisfactoria para desarrollar algoritmos complicados."

#: testing/testing.md:623
msgid ""
"Once the tests are written, the code is developed so that it passes all the "
"associated tests. Testing the code from the outset ensures that your code is"
" always in a releasable state (as long as it passes the tests!). Test driven"
" development forces you to break up your code into small discrete units, to "
"make them easier to test; the code must be modular. The benefits of this "
"were discussed in the section on [unit testing](#Unit_tests)."
msgstr ""
"Una vez escritas las pruebas, el código se desarrolla para que pase todas "
"las pruebas asociadas. Probar el código desde el principio garantiza que el "
"código esté siempre disponible (siempre que pase las pruebas). El desarrollo"
" orientado a las pruebas obliga a dividir el código en pequeñas unidades "
"discretas, para que sea más fácil probarlas; el código debe ser modular. Los"
" beneficios de esto fueron discutidos en la sección sobre [pruebas "
"unitarias](#Pruebas_unitarias)."

#: testing/testing.md:625
msgid ""
"An alternative development approach is behaviour driven development. Simply "
"put test driven development tests \"has the thing been done correctly?\", "
"behaviour driven development tests \"has the correct thing been done?\". It "
"is more often used in commercial software development to focus development "
"on making the software as simple and effective as possible for users. User "
"experience is very rarely at the heart of code written for the purposes of "
"research, but there are cases where such software is written with a large "
"user-base in mind. In such cases behaviour-driven development is a path "
"worth considering."
msgstr ""
"Un enfoque de desarrollo alternativo es el desarrollo basado en el "
"comportamiento. En pocas palabras, el desarrollo orientado a las pruebas "
"comprueba \"si la cosa se ha hecho correctamente\", mientras que el "
"desarrollo orientado al comportamiento comprueba \"si se ha hecho lo "
"correcto\". Se utiliza más a menudo en el desarrollo de software comercial "
"para centrar el desarrollo en hacer que el software sea lo más sencillo y "
"eficaz posible para los usuarios. La experiencia del usuario no suele estar "
"en el centro del código escrito con fines de investigación, pero hay casos "
"en los que este tipo de software se escribe pensando en una gran base de "
"usuarios. En estos casos, el desarrollo basado en el comportamiento es un "
"camino que merece la pena considerar."

#: testing/testing.md:627
msgid "<a name=\"Checklist\"></a>"
msgstr "<a name=\"Checklist\"></a>"

# header
#: testing/testing.md:628
msgid "## Checklist"
msgstr "## Lista de verificación"

#: testing/testing.md:630
msgid ""
"This checklist contains a lot of items. As "
"[mentioned](#Write_tests_any_tests) it is far better to do some of the items"
" than none of them. Do not be discouraged if this list of tasks seems "
"insurmountable."
msgstr ""
"Esta lista de verificación contiene muchos elementos. Como se ha mencionado "
"(#Escribir_pruebas_cualquier_prueba) es mucho mejor hacer algunos de los "
"elementos que ninguno. No se desanime si esta lista de tareas parece "
"insuperable."

#: testing/testing.md:632
msgid "<a name=\"Writing_tests\"></a>"
msgstr "<a name=\"Writing_tests\"></a>"

# header
#: testing/testing.md:633
msgid "### Writing tests"
msgstr "### Escribir pruebas"

# unordered list
#: testing/testing.md:635
msgid "- [ ] Write a few smoke tests."
msgstr "- [ ] Escribe algunas pruebas de humo."

# unordered list
#: testing/testing.md:636
msgid "- [ ] Write unit tests for all your code units."
msgstr "- [ ] Escribe pruebas unitarias para todas las unidades de tu código."

# unordered list
#: testing/testing.md:637
msgid "- [ ] Write integration tests to check the integration between units."
msgstr ""
"- [ ] Escribe pruebas de integración para comprobar la integración entre "
"unidades."

# unordered list
#: testing/testing.md:638
msgid ""
"- [ ] Write a few system tests. Prioritise common and important paths "
"through the program."
msgstr ""
"- [ ] Escribe unas cuantas pruebas del sistema. Dar prioridad a los caminos "
"comunes e importantes a través del programa."

# unordered list
#: testing/testing.md:639
msgid ""
"- [ ] Write regression tests. Regression tests can exist at any level of "
"testing."
msgstr ""
"- [ ] Escribe pruebas de regresión. Las pruebas de regresión pueden existir "
"en cualquier nivel de pruebas."

# unordered list
#: testing/testing.md:640
msgid "- [ ] If appropriate for your project write acceptance tests."
msgstr ""
"- [ ] Si es apropiado para tu proyecto, escribe pruebas de aceptación."

# unordered list
#: testing/testing.md:641
msgid "- [ ] Add runtime tests into your project."
msgstr "- [ ] Añade pruebas de ejecución en tu proyecto."

#: testing/testing.md:643
msgid "<a name=\"Good_practice_checks\"></a>"
msgstr "<a name=\"Good_practice_checks\"></a>"

# header
#: testing/testing.md:644
msgid "### Good practice checks"
msgstr "### Buenas prácticas"

# unordered list
#: testing/testing.md:646
msgid "- [ ] Document the tests and how to run them."
msgstr "- [ ] Documenta las pruebas y cómo ejecutarlas."

# unordered list
#: testing/testing.md:647
msgid ""
"  - [ ] Write scripts to set up and configure any resources that are needed "
"to run the tests."
msgstr ""
" - [ ] Escribe scripts para establecer y configurar cualquier recurso que se"
" necesite para ejecutar las pruebas."

# unordered list
#: testing/testing.md:648
msgid "- [ ] Pick and make use of a testing framework."
msgstr "- [ ] Escoge y utiliza un marco (\"framework\" en inglés) de pruebas."

# unordered list
#: testing/testing.md:649
msgid "- [ ] Run the tests regularly."
msgstr "- [ ] Realiza las pruebas con regularidad."

# unordered list
#: testing/testing.md:650
msgid ""
"  - [ ] Automate the process of running tests. Consider making use of "
"continuous integration (see continuous integration chapter) to do this."
msgstr ""
" - [ ] Automatiza el proceso de ejecución de pruebas. Para ello, considera "
"hacer uso de la integración continua (ver capítulo de integración continua)."

# unordered list
#: testing/testing.md:651
msgid "- [ ] Check the code coverage of your tests and try to improve it."
msgstr ""
"- [ ] Comprueba la cobertura de código de tus pruebas e intenta mejorarla."

# unordered list
#: testing/testing.md:652
msgid "- [ ] Engage in code review with a partner."
msgstr "- [ ] Participar en la revisión del código con otra persona."

#: testing/testing.md:655
msgid "<a name=\"What_to_learn_next\"></a>"
msgstr "<a name=\"What_to_learn_next\"></a>"

# header
#: testing/testing.md:656
msgid "## What to learn next"
msgstr "## ¿Qué aprender a continuación?"

#: testing/testing.md:658
msgid ""
"Try reading the chapter on reproducible computational environments and then "
"the chapter on continuous integration. The chapter on reviewing outlines how"
" you can further strengthen your code base by adding a formal reviewing "
"stage to your development workflow."
msgstr ""
"Intenta leer el capítulo sobre entornos computacionales reproducibles y "
"luego el capítulo sobre integración continua. El capítulo sobre la revisión "
"describe cómo puedes fortalecer aún más tu base de código añadiendo una "
"etapa de revisión formal a tu flujo de trabajo de desarrollo."

#: testing/testing.md:660
msgid "<a name=\"Further_reading\"></a>"
msgstr "<a name=\"Further_reading\"></a>"

# header
#: testing/testing.md:661
msgid "## Further reading"
msgstr "## Lecturas complementarias"

#: testing/testing.md:663
msgid ""
"[TutorialsPoint](https://www.tutorialspoint.com/software_testing/) has a "
"number of useful tutorials related to testing, as does the [Turing "
"Institute](https://alan-turing-institute.github.io/rsd-"
"engineeringcourse/ch03tests/01testingbasics.html). It is also worth looking "
"at "
"[softwaretestingfundamentals.com](http://softwaretestingfundamentals.com)."
msgstr ""
"[TutorialsPoint](https://www.tutorialspoint.com/software_testing/) tiene una"
" serie de tutoriales útiles relacionados con las pruebas, al igual que el "
"[Instituto Turing](https://alan-turing-institute.github.io/rsd-"
"engineeringcourse/ch03tests/01testingbasics.html). También merece la pena "
"consultar "
"[softwaretestingfundamentals.com](http://softwaretestingfundamentals.com)."

#: testing/testing.md:665
msgid "<a name=\"Definitions_glossary\"></a>"
msgstr "<a name=\"Definitions_glossary\"></a>"

# header
#: testing/testing.md:666
msgid "## Definitions/glossary"
msgstr "## Definiciones/glosario"

# unordered list
#: testing/testing.md:668
msgid ""
"- **Acceptance test:** A test that the program meets the project's "
"fundamental requirements."
msgstr ""
"- **Prueba de aceptación:** Prueba de que el programa cumple los requisitos "
"fundamentales del proyecto."

# unordered list
#: testing/testing.md:670
msgid ""
"- **Code coverage:** A measure which describes how much of the source code "
"is exercised by the test suite."
msgstr ""
"- **Cobertura del código:** Una medida que describe qué parte del código "
"fuente es ejercitada por el conjunto de pruebas."

# unordered list
#: testing/testing.md:672
msgid ""
"- **End to end test:** A test that runs the program from beginning to end "
"and verifies that the output is correct."
msgstr ""
"- **Prueba de extremo a extremo:** Una prueba que ejecuta el programa de "
"principio a fin y verifica que la salida es correcta."

# unordered list
#: testing/testing.md:674
msgid ""
"- **Integration test:** A test where units of code are combined and run, and"
" the output is verified to check the units have been correctly integrated."
msgstr ""
"- **Prueba de integración:** Prueba en la que se combinan y ejecutan "
"unidades de código y se verifica el resultado para comprobar que las "
"unidades se han integrado correctamente."

# unordered list
#: testing/testing.md:676
msgid ""
"- **Mocking:** Replace a real object with a pretend one to use when running "
"tests."
msgstr ""
"- **Mocking:** Reemplazar un objeto real por uno de mentira para utilizarlo "
"al ejecutar las pruebas."

# unordered list
#: testing/testing.md:678
msgid ""
"- **Regression test:** Comparing the result of a test before and after the "
"code has been altered. If the output has changed a problem has been "
"introduced somewhere in the program, and an error is thrown."
msgstr ""
"- **Prueba de regresión:** Comparar el resultado de una prueba antes y "
"después de que el código haya sido alterado. Si el resultado ha cambiado se "
"ha introducido un problema en alguna parte del programa, y se lanza un "
"error."

# unordered list
#: testing/testing.md:680
msgid ""
"- **Runtime test:** Tests embedded within the program which are run as part "
"of it."
msgstr ""
"- **Prueba en tiempo de ejecución:** Pruebas integradas en el programa que "
"se ejecutan como parte del mismo."

# unordered list
#: testing/testing.md:682
msgid ""
"- **Smoke test:** Very brief initial checks that ensure the basic "
"requirements needed to run the project hold."
msgstr ""
"- **Prueba de humo:** Comprobaciones iniciales muy breves que garantizan el "
"cumplimiento de los requisitos básicos necesarios para el funcionamiento del"
" proyecto."

# unordered list
#: testing/testing.md:684
msgid ""
"- **Stochastic code:** Code which, while correct, does not always output the"
" same result. For example a program that outputs ten random numbers will "
"generate a different result each time, despite being correct."
msgstr ""
"- **Código estocástico:** Código que, aunque es correcto, no produce siempre"
" el mismo resultado. Por ejemplo, un programa que produce diez números "
"aleatorios generará un resultado diferente cada vez, a pesar de ser "
"correcto."

# unordered list
#: testing/testing.md:686
msgid "- **System test:** See \"end to end test\"."
msgstr "- **Prueba del sistema:** Ver \"prueba de extremo a extremo\"."

# unordered list
#: testing/testing.md:688
msgid ""
"- **Test driven development:** A process of code development where unit "
"tests are written before the units themselves."
msgstr ""
"- **Desarrollo dirigido por pruebas:** Un proceso de desarrollo de código en"
" el que las pruebas unitarias se escriben antes que las propias unidades."

# unordered list
#: testing/testing.md:690
msgid ""
"- **Test stub:** Fake implementations of parts of code which are used in "
"testing to remove dependences."
msgstr ""
"- **Test stub:** Implementaciones falsas de partes de código que se utilizan"
" en las pruebas para eliminar dependencias."

# unordered list
#: testing/testing.md:692
msgid "- **Test suite:** The tests that have been written for a project."
msgstr ""
"- **Conjunto de pruebas:** Las pruebas que se han escrito para un proyecto."

# unordered list
#: testing/testing.md:694
msgid ""
"- **Testing framework:** Tools that make writing and running tests less "
"labour intensive."
msgstr ""
"- **Marco de pruebas:** Herramientas que hacen que escribir y ejecutar "
"pruebas sea menos laborioso."

# unordered list
#: testing/testing.md:696
msgid ""
"- **Unit:** A small piece of code that does one simple thing. It usually has"
" one or a few inputs and usually a single output."
msgstr ""
"- **Unidad:** Una pequeña pieza de código que hace una cosa simple. Suele "
"tener una o unas pocas entradas y normalmente una única salida."

# unordered list
#: testing/testing.md:698
msgid "- **Unit test:** A test that checks the behaviour of a unit."
msgstr ""
"- **Prueba de unidad:** Una prueba que comprueba el comportamiento de una "
"unidad."

#: testing/testing.md:700
msgid "<a name=\"Bibliography\"></a>"
msgstr "<a name=\"Bibliography\"></a>"

# header
#: testing/testing.md:701
msgid "## Bibliography"
msgstr "## Bibliografía  "

# header
#: testing/testing.md:703
msgid "### Materials used: How this will help you/ why this is useful"
msgstr "### Materiales utilizados: Cómo te ayudará/ por qué es útil"

# unordered list
#: testing/testing.md:705 testing/testing.md:751
msgid ""
"- [Talk by Chrys "
"Woods](https://drive.google.com/file/d/1CBTAhCVixccui1DjeUT13qh6ga5SDXjl/view)"
" [**Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International "
"License**](https://chryswoods.com/main/copyright.html)"
msgstr ""
"- [Charla de Chrys "
"Woods](https://drive.google.com/file/d/1CBTAhCVixccui1DjeUT13qh6ga5SDXjl/view)"
" [**Licencia internacional de atribución no comercial y de uso compartido "
"4.0 de Creative Commons**](https://chryswoods.com/main/copyright.html)"

# unordered list
#: testing/testing.md:706
msgid ""
"- [Turing testing course basics](https://alan-turing-"
"institute.github.io/rsd-engineeringcourse/ch03tests/01testingbasics.html) "
"**Creative Commons share and remix**"
msgstr ""
"- Curso básico de pruebas de Turing](https://alan-turing-"
"institute.github.io/rsd-engineeringcourse/ch03tests/01testingbasics.html) "
"**Compartir y remezclar con Creative Commons**."

# unordered list
#: testing/testing.md:707
msgid ""
"- [SSI blog](https://www.software.ac.uk/resources/guides/testing-your-"
"software?_ga=2.39233514.830272891.1552653652-1336468516.1531506806) "
"**Creative Commons Attribution Non-Commercial 2.5 License.**"
msgstr ""
"- [Blog de SSI](https://www.software.ac.uk/resources/guides/testing-your-"
"software?_ga=2.39233514.830272891.1552653652-1336468516.1531506806) "
"**Licencia Creative Commons Reconocimiento No Comercial 2.5.**"

# header
#: testing/testing.md:709
msgid "### Materials used: General guidance and good practice for testing"
msgstr ""
"### Materiales utilizados: Orientaciones generales y buenas prácticas para "
"las pruebas"

# unordered list
#: testing/testing.md:711
msgid ""
"- [SSI blog on testing "
"software](https://www.software.ac.uk/resources/guides/testing-your-"
"software?_ga=2.39233514.830272891.1552653652-1336468516.1531506806) "
"**Creative Commons Attribution Non-Commercial 2.5 License.**"
msgstr ""
"- [Blog de SSI sobre pruebas de "
"software](https://www.software.ac.uk/resources/guides/testing-your-"
"software?_ga=2.39233514.830272891.1552653652-1336468516.1531506806) "
"**Licencia Creative Commons Reconocimiento No Comercial 2.5.**"

# unordered list
#: testing/testing.md:712
msgid ""
"- [Turing testing course](https://alan-turing-institute.github.io/rsd-"
"engineeringcourse/ch03tests/03pytest.html) **Creative Commons share and "
"remix**"
msgstr ""
"- [Curso de pruebas del instituto Turing](https://alan-turing-"
"institute.github.io/rsd-engineeringcourse/ch03tests/03pytest.html) "
"**Compartir y remezclar con Creative Commons**"

# unordered list
#: testing/testing.md:713
msgid ""
"- [Mocking](https://www.vogella.com/tutorials/Mockito/article.html) "
"**Attribution-NonCommercial-ShareAlike 3.0 Germany (CC BY-NC-SA 3.0 DE)**"
msgstr ""
"- [Mocking](https://www.vogella.com/tutorials/Mockito/article.html) "
"**Attribution-NonCommercial-ShareAlike 3.0 Germany (CC BY-NC-SA 3.0 DE)**"

# unordered list
#: testing/testing.md:714
msgid ""
"- [Testing with floating "
"points](https://github.com/softwaresaved/automated_testing/blob/master/README.md)"
" **Apache License 2.0**"
msgstr ""
"- [Pruebas con puntos "
"flotantes](https://github.com/softwaresaved/automated_testing/blob/master/README.md)"
" **Licencia Apache 2.0**"

# header
#: testing/testing.md:716
msgid "### Materials used: Types of tests"
msgstr "### Materiales utilizados: Tipos de pruebas"

# unordered list
#: testing/testing.md:718
msgid ""
"- [Software testing fundamentals: levels of "
"tests](http://softwaretestingfundamentals.com/software-testing-levels/) "
"**Copyleft - 2019 STF**"
msgstr ""
"- [Fundamentos de las pruebas de software: niveles de "
"pruebas](http://softwaretestingfundamentals.com/software-testing-levels/) "
"**Copyleft - 2019 STF**"

# header
#: testing/testing.md:720
msgid "### Materials used: Smoke testing"
msgstr "### Materiales utilizados: Pruebas de humo"

# unordered list
#: testing/testing.md:722
msgid ""
"- [Digitalocean](https://www.digitalocean.com/community/tutorials/an-"
"introduction-to-continuous-integration-delivery-and-deployment) **Creative "
"Commons Attribution-NonCommercial-ShareAlike 4.0 International License.**"
msgstr ""
"- [Digitalocean](https://www.digitalocean.com/community/tutorials/an-"
"introduction-to-continuous-integration-delivery-and-deployment) **Licencia "
"Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International "
"License.**"

# header
#: testing/testing.md:724
msgid "### Materials used: Unit testing"
msgstr "### Materiales utilizados: Pruebas unitarias"

# unordered list
#: testing/testing.md:726 testing/testing.md:731 testing/testing.md:737
#: testing/testing.md:740
msgid ""
"- [An introduction to continuous "
"integration](https://www.digitalocean.com/community/tutorials/an-"
"introduction-to-continuous-integration-delivery-and-deployment) **Creative "
"Commons Attribution-NonCommercial-ShareAlike 4.0 International License.**"
msgstr ""
"- [Introducción a la integración "
"continua](https://www.digitalocean.com/community/tutorials/an-introduction-"
"to-continuous-integration-delivery-and-deployment) **Licencia Creative "
"Commons Attribution-NonCommercial-ShareAlike 4.0 International License.**"

# unordered list
#: testing/testing.md:727
msgid ""
"- [Software testing fundamentals: unit "
"tests](http://softwaretestingfundamentals.com/unit-testing/) **Copyleft - "
"2019 STF**"
msgstr ""
"- [Fundamentos de las pruebas de software: pruebas "
"unitarias](http://softwaretestingfundamentals.com/unit-testing/) **Copyleft "
"- 2019 STF**"

# header
#: testing/testing.md:729
msgid "### Materials used: Integration testing"
msgstr "### Materiales utilizados: Pruebas de integración"

# unordered list
#: testing/testing.md:732
msgid ""
"- [Software testing fundamentals: integration "
"testing](http://softwaretestingfundamentals.com/integration-testing/) "
"**Copyleft - 2019 STF**"
msgstr ""
"- [Fundamentos de las pruebas de software: pruebas de "
"integración](http://softwaretestingfundamentals.com/integration-testing/) "
"**Copyleft - 2019 STF**"

# header
#: testing/testing.md:734
msgid "### Materials used: System testing"
msgstr "### Materiales utilizados: Pruebas del sistema"

# unordered list
#: testing/testing.md:736
msgid ""
"- [Software testing fundamentals: system "
"testing](http://softwaretestingfundamentals.com/system-testing/) **Copyleft "
"- 2019 STF**"
msgstr ""
"- [Fundamentos de pruebas de software: pruebas de "
"sistemas](http://softwaretestingfundamentals.com/system-testing/) **Copyleft"
" - 2019 STF**"

# header
#: testing/testing.md:739
msgid "### Materials used: Acceptance testing"
msgstr "### Materiales utilizados: Pruebas de aceptación"

# header
#: testing/testing.md:742
msgid "### Materials used: Regression testing"
msgstr "### Materiales utilizados: Pruebas de regresión"

# unordered list
#: testing/testing.md:744
msgid ""
"- [Sound software](http://soundsoftware.ac.uk/unit-testing-why-bother/) "
"**Creative Commons Attribution-NonCommercial 3.0 License**"
msgstr ""
"- [Software de sonido](http://soundsoftware.ac.uk/unit-testing-why-bother/) "
"**Licencia Creative Commons Attribution-NonCommercial 3.0**"

# unordered list
#: testing/testing.md:745
msgid ""
"- [Software testing fundamentalsL regression "
"testing](http://softwaretestingfundamentals.com/regression-testing/) "
"**Copyleft**"
msgstr ""
"- [Fundamentos de las pruebas de softwarePruebas de "
"regresión](http://softwaretestingfundamentals.com/regression-testing/) "
"**Copyleft**"

# unordered list
#: testing/testing.md:746
msgid ""
"- [Examples of Regression Testing by Cem "
"Karner](http://www.testingeducation.org/k04/RegressionExamples.htm) "
"**Creative Commons Attribution-ShareAlike License 2.0**"
msgstr ""
"- [Ejemplos de pruebas de regresión por Cem "
"Karner](http://www.testingeducation.org/k04/RegressionExamples.htm) "
"**Licencia Creative Commons Attribution-ShareAlike 2.0**"

# unordered list
#: testing/testing.md:747
msgid ""
"- [Adopting automated "
"testing](https://github.com/softwaresaved/automated_testing/blob/master/README.md)"
" **Apache License 2.0**"
msgstr ""
"- [Adopción de pruebas "
"automatizadas](https://github.com/softwaresaved/automated_testing/blob/master/README.md)"
" **Licencia Apache 2.0**"

# header
#: testing/testing.md:749
msgid "### Materials used: Runtime testing"
msgstr "### Materiales utilizados: Pruebas en tiempo real"

# header
#: testing/testing.md:753
msgid "### Materials used: Test driven development"
msgstr "### Materiales utilizados: Desarrollo impulsado por pruebas"

# unordered list
#: testing/testing.md:755
msgid ""
"- [Testing your software](https://software.ac.uk/resources/guides/testing-"
"your-software) **Creative Commons Attribution-NonCommercial 3.0 License.**"
msgstr ""
"- [Probando tu software ](https://software.ac.uk/resources/guides/testing-"
"your-software) **Licencia Creative Commons Atribución-NoComercial 3.0.**"

# unordered list
#: testing/testing.md:756
msgid ""
"- [Why bother](http://soundsoftware.ac.uk/unit-testing-why-bother/) "
"**Creative Commons Attribution-NonCommercial 3.0 License.**"
msgstr ""
"- [Por qué molestarse ](http://soundsoftware.ac.uk/unit-testing-why-bother/)"
" **Licencia Creative Commons Reconocimiento-No Comercial 3.0.**"

# header
#: testing/testing.md:758
msgid "### Materials used: glossary"
msgstr "### Materiales utilizados: glosario"

# unordered list
#: testing/testing.md:760
msgid ""
"- [Netherlands eScience "
"centre](https://guide.esciencecenter.nl/best_practices/testing.html) "
"**Creative Commons Attribution 4.0 International License**"
msgstr ""
"- [Netherlands eScience "
"centre](https://guide.esciencecenter.nl/best_practices/testing.html) "
"**Licencia internacional Creative Commons Attribution 4.0**"
